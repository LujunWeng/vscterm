steps:

- task: NodeTool@0
  inputs:
    versionSpec: "8.9.1"

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
  inputs:
    versionSpec: "1.3.2"

- powershell: |
    "machine monacotools.visualstudio.com password $(VSO_PAT)" | Out-File "$env:USERPROFILE\_netrc" -Encoding ASCII
    $env:npm_config_arch="$(VSCODE_ARCH)"
    $env:CHILD_CONCURRENCY="1"
    yarn
    npm run gulp -- hygiene
    npm run monaco-compile-check
    $env:VSCODE_MIXIN_PASSWORD="$(VSCODE_MIXIN_PASSWORD)"
    npm run gulp -- mixin
    node build/tfs/common/installDistro.js

- powershell: |
    $env:VSCODE_MIXIN_PASSWORD="$(VSCODE_MIXIN_PASSWORD)"
    npm run gulp -- "vscode-win32-$(VSCODE_ARCH)-min"
    npm run gulp -- "vscode-win32-$(VSCODE_ARCH)-copy-inno-updater"
  name: build

- powershell: |
    npm run gulp -- "electron-$(VSCODE_ARCH)"
    .\scripts\test.bat --build --tfs
  name: test

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  inputs:
    ConnectedServiceName: 'ESRP CodeSign'
    FolderPath: '$(agent.builddirectory)/VSCode-win32-$(VSCODE_ARCH)'
    Pattern: '*.dll,*.exe,*.node'
    signConfigType: inlineSignParams
    inlineOperation: |
     [
         {
             "keyCode": "CP-229803",
             "operationSetCode": "SigntoolSign",
             "parameters": [
             {
                 "parameterName": "OpusName",
                 "parameterValue": "Microsoft"
             },
             {
                 "parameterName": "OpusInfo",
                 "parameterValue": "http://www.microsoft.com"
             },
             {
                 "parameterName": "PageHash",
                 "parameterValue": "/NPH"
             },
             {
                 "parameterName": "TimeStamp",
                 "parameterValue": "/t \"http://ts4096.gtm.microsoft.com/TSS/AuthenticodeTS\""
             }
             ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolSign",
             "parameters": [
             {
                 "parameterName": "OpusName",
                 "parameterValue": "Microsoft"
             },
             {
                 "parameterName": "OpusInfo",
                 "parameterValue": "http://www.microsoft.com"
             },
             {
                 "parameterName": "Append",
                 "parameterValue": "/as"
             },
             {
                 "parameterName": "FileDigest",
                 "parameterValue": "/fd \"SHA256\""
             },
             {
                 "parameterName": "PageHash",
                 "parameterValue": "/NPH"
             },
             {
                 "parameterName": "TimeStamp",
                 "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
             }
             ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolVerify",
             "parameters": [
             {
                 "parameterName": "VerifyAll",
                 "parameterValue": "/all"
             }
             ],
             "toolName": "sign",
             "toolVersion": "1.0"
         }
     ]
    SessionTimeout: 120

- powershell: |
    npm run gulp -- "vscode-win32-$(VSCODE_ARCH)-archive" "vscode-win32-$(VSCODE_ARCH)-setup"

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  inputs:
    ConnectedServiceName: 'ESRP CodeSign'
    FolderPath: '$(agent.builddirectory)'
    Pattern: VSCodeSetup.exe
    signConfigType: inlineSignParams
    inlineOperation: |
     [
         {
             "keyCode": "CP-229803",
             "operationSetCode": "SigntoolSign",
             "parameters": [
             {
                 "parameterName": "OpusName",
                 "parameterValue": "Microsoft"
             },
             {
                 "parameterName": "OpusInfo",
                 "parameterValue": "http://www.microsoft.com"
             },
             {
                 "parameterName": "PageHash",
                 "parameterValue": "/NPH"
             },
             {
                 "parameterName": "TimeStamp",
                 "parameterValue": "/t \"http://ts4096.gtm.microsoft.com/TSS/AuthenticodeTS\""
             }
             ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolSign",
             "parameters": [
             {
                 "parameterName": "OpusName",
                 "parameterValue": "Microsoft"
             },
             {
                 "parameterName": "OpusInfo",
                 "parameterValue": "http://www.microsoft.com"
             },
             {
                 "parameterName": "Append",
                 "parameterValue": "/as"
             },
             {
                 "parameterName": "FileDigest",
                 "parameterValue": "/fd \"SHA256\""
             },
             {
                 "parameterName": "PageHash",
                 "parameterValue": "/NPH"
             },
             {
                 "parameterName": "TimeStamp",
                 "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
             }
             ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolVerify",
             "parameters": [
             {
                 "parameterName": "VerifyAll",
                 "parameterValue": "/all"
             }
             ],
             "toolName": "sign",
             "toolVersion": "1.0"
         }
     ]
    SessionTimeout: 120

- powershell: |
    $Repo = "$(pwd)"
    $Root = "$Repo\.."
    $Exe = "$Repo\.build\win32-$(VSCODE_ARCH)\setup\VSCodeSetup.exe"
    $Zip = "$Repo\.build\win32-$(VSCODE_ARCH)\archive\VSCode-win32-$(VSCODE_ARCH).zip"
    $Build = "$Root\VSCode-win32-$(VSCODE_ARCH)"

    # get version
    $PackageJson = Get-Content -Raw -Path "$Build\resources\app\package.json" | ConvertFrom-Json
    $Version = $PackageJson.version
    $Quality = "$env:VSCODE_QUALITY"
    $env:AZURE_STORAGE_ACCESS_KEY_2 = "$(AZURE_STORAGE_ACCESS_KEY_2)"
    $env:MOONCAKE_STORAGE_ACCESS_KEY = "$(MOONCAKE_STORAGE_ACCESS_KEY)"
    $env:AZURE_DOCUMENTDB_MASTERKEY = "$(AZURE_DOCUMENTDB_MASTERKEY)"

    $assetPlatform = if ("$(VSCODE_ARCH)" -eq "ia32") { "win32" } else { "win32-x64" }

    node build/tfs/common/publish.js $Quality "$global:assetPlatform-archive" archive "VSCode-win32-$(VSCODE_ARCH)-$Version.zip" $Version true $Zip
    node build/tfs/common/publish.js $Quality "$global:assetPlatform" setup "VSCodeSetup-$(VSCODE_ARCH)-$Version.exe" $Version true $Exe