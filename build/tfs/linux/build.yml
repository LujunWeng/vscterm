steps:

- script: |
    # dependencies
    dpkg --add-architecture i386
    apt-get update

    DEPS=" \
      gcc-multilib g++-multilib \
      pkg-config \
      dbus \
      xvfb \
      fakeroot \
      bc \
      bsdmainutils \
      rpm \
    "

    if [[ "$(VSCODE_ARCH)" == "x64" ]]; then
      DEPS="$DEPS \
        dpkg-dev \
        libgconf-2-4 \
        libnss3 \
        libasound2 \
        libxtst6 \
        libx11-dev \
        libxkbfile-dev \
        libxss1 \
        libx11-xcb-dev \
        libsecret-1-dev \
      "
    else
      DEPS="$DEPS \
        dpkg-dev:i386 \
        libgconf-2-4:i386 \
        libnss3:i386 \
        libasound2:i386 \
        libxtst6:i386 \
        libnotify4:i386 \
        libx11-dev:i386 \
        libxkbfile-dev:i386 \
        libxss1:i386 \
        libx11-xcb-dev:i386 \
        libgl1-mesa-glx:i386 libgl1-mesa-dri:i386 \
        libgirepository-1.0-1:i386 \
        gir1.2-glib-2.0:i386 \
        gir1.2-secret-1:i386 \
        libsecret-1-dev:i386 \
        libgtk2.0-0:i386 \
      "
    fi

    apt-get install -y $DEPS

    # setup xvfb
    cp build/tfs/linux/$(VSCODE_ARCH)/xvfb.init /etc/init.d/xvfb
    chmod +x /etc/init.d/xvfb
    update-rc.d xvfb defaults
    service xvfb start

    # setup dbus
    ln -sf /bin/dbus-daemon /usr/bin/dbus-daemon
    service dbus start

- task: NodeTool@0
  inputs:
    versionSpec: "8.9.1"

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
  inputs:
    versionSpec: "1.3.2"

- script: |
    export npm_config_arch="$(VSCODE_ARCH)"
    if [[ "$(VSCODE_ARCH)" == "ia32" ]]; then
      export PKG_CONFIG_PATH="/usr/lib/i386-linux-gnu/pkgconfig"
    fi

    echo "machine monacotools.visualstudio.com password $(VSO_PAT)" > ~/.netrc
    yarn
    npm run gulp -- hygiene
    npm run monaco-compile-check
    VSCODE_MIXIN_PASSWORD="$(VSCODE_MIXIN_PASSWORD)" npm run gulp -- mixin
    node build/tfs/common/installDistro.js

- script: |
    VSCODE_MIXIN_PASSWORD="$(VSCODE_MIXIN_PASSWORD)" npm run gulp -- vscode-linux-$(VSCODE_ARCH)-min
  name: build

- script: |
    npm run gulp -- "electron-$(VSCODE_ARCH)"
    DISPLAY=:10 ./scripts/test.sh --build --tfs
  name: test

- script: |
    npm run gulp -- "vscode-linux-$(VSCODE_ARCH)-build-deb"
    npm run gulp -- "vscode-linux-$(VSCODE_ARCH)-build-rpm"
    #npm run gulp -- "vscode-linux-$(VSCODE_ARCH)-build-snap"

    AZURE_DOCUMENTDB_MASTERKEY="$(AZURE_DOCUMENTDB_MASTERKEY)" \
    AZURE_STORAGE_ACCESS_KEY_2="$(AZURE_STORAGE_ACCESS_KEY_2)" \
    MOONCAKE_STORAGE_ACCESS_KEY="$(MOONCAKE_STORAGE_ACCESS_KEY)" \
    ./build/tfs/linux/release2.sh "$(VSCODE_ARCH)" "$(LINUX_REPO_PASSWORD)"