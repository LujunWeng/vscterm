phases:
- phase: Windows
  queue: Hosted VS2017
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "8.9.1"
  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.3.2"
  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@2
    displayName: Yarn
    inputs:
      customRegistry: useFeed
      customFeed: 'd28dd4e6-8e53-406e-8887-22f7c4dffd0c'
  # - task: npmAuthenticate@0
  #   displayName: NPM Authenticate
  - powershell: |
      yarn gulp electron
    displayName: Download Electron
  - powershell: |
      yarn gulp hygiene
    displayName: Run Hygiene Checks
  - powershell: |
      yarn check-monaco-editor-compilation
    displayName: Run Monaco Editor Checks
  - powershell: |
      yarn compile
    displayName: Compile Sources
  - powershell: |
      yarn download-builtin-extensions
    displayName: Download Built-in Extensions
  - powershell: |
      .\scripts\test.bat --tfs
    displayName: Run Unit Tests
  - powershell: |
      .\scripts\test-integration.bat
    displayName: Run Integration Tests
  - powershell: |
      yarn smoketest --screenshots "$(Build.ArtifactStagingDirectory)\artifacts" --log "$(Build.ArtifactStagingDirectory)\artifacts\smoketest.log"
    displayName: Run Smoke Tests
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/artifacts'
      ArtifactName: build-artifacts-win32
      publishLocation: Container
    condition: succeededOrFailed()

- phase: Linux
  queue: Hosted Linux Preview
  steps:
  - script: |
      set -e
      apt-get update
      apt-get install -y libxkbfile-dev pkg-config libsecret-1-dev libxss1 libgconf-2-4 dbus xvfb libgtk-3-0
      cp build/tfs/linux/x64/xvfb.init /etc/init.d/xvfb
      chmod +x /etc/init.d/xvfb
      update-rc.d xvfb defaults
      ln -sf /bin/dbus-daemon /usr/bin/dbus-daemon
      service xvfb start
      service dbus start
  - task: NodeTool@0
    inputs:
      versionSpec: "8.9.1"
  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.3.2"
  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@2
    displayName: Yarn
    inputs:
      customRegistry: useFeed
      customFeed: 'd28dd4e6-8e53-406e-8887-22f7c4dffd0c'
  # - task: npmAuthenticate@0
  #   displayName: NPM Authenticate
  - script: |
      yarn gulp electron-x64
    displayName: Download Electron
  - script: |
      yarn gulp hygiene
    displayName: Run Hygiene Checks
  - script: |
      yarn check-monaco-editor-compilation
    displayName: Run Monaco Editor Checks
  - script: |
      yarn compile
    displayName: Compile Sources
  - script: |
      yarn download-builtin-extensions
    displayName: Download Built-in Extensions
  - script: |
      DISPLAY=:10 ./scripts/test.sh --tfs
    displayName: Run Unit Tests

- phase: macOS
  queue: Hosted macOS Preview
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "8.9.1"
  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.3.2"
  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@2
    displayName: Yarn
    inputs:
      customRegistry: useFeed
      customFeed: 'd28dd4e6-8e53-406e-8887-22f7c4dffd0c'
  # - task: npmAuthenticate@0
  #   displayName: NPM Authenticate
  - script: |
      yarn gulp electron-x64
    displayName: Download Electron
  - script: |
      yarn gulp hygiene
    displayName: Run Hygiene Checks
  - script: |
      yarn check-monaco-editor-compilation
    displayName: Run Monaco Editor Checks
  - script: |
      yarn compile
    displayName: Compile Sources
  - script: |
      yarn download-builtin-extensions
    displayName: Download Built-in Extensions
  - script: |
      ./scripts/test.sh --tfs
    displayName: Run Unit Tests
  - script: |
      ./scripts/test-integration.sh
    displayName: Run Integration Tests
  - script: |
      yarn smoketest --screenshots "$(Build.ArtifactStagingDirectory)/artifacts" --log "$(Build.ArtifactStagingDirectory)/artifacts/smoketest.log"
    displayName: Run Smoke Tests
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/artifacts'
      ArtifactName: build-artifacts-darwin
      publishLocation: Container
    condition: succeededOrFailed()