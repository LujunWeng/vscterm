{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "Git",
	"description": "Integração com SCM Git",
	"command.clone": "Clonar",
	"command.init": "Inicializar Repositório",
	"command.close": "Fechar o repositório",
	"command.refresh": "Atualizar",
	"command.openChange": "Abrir alterações",
	"command.openFile": "Abrir Arquivo",
	"command.openHEADFile": "Abrir arquivo (HEAD)",
	"command.stage": "Estagiar Alterações",
	"command.stageAll": "Estagiar Todas Alterações",
	"command.stageSelectedRanges": "Estagiar Faixas Selecionadas",
	"command.revertSelectedRanges": "Reverter Faixas Selecionadas",
	"command.stageChange": "Mudança de fase",
	"command.revertChange": "Reverter a alteração",
	"command.unstage": "Desestagiar Alterações",
	"command.unstageAll": "Desestagiar Todas Alterações",
	"command.unstageSelectedRanges": "Desestagiar Faixas Selecionadas",
	"command.clean": "Descartar Alterações",
	"command.cleanAll": "Descartar Todas as Alterações",
	"command.commit": "Confirmar",
	"command.commitStaged": "Confirmar os preparados",
	"command.commitStagedSigned": "Confirmar Estagiados (Desconectado)",
	"command.commitStagedAmend": "Confirmar estagiado (alterar)",
	"command.commitAll": "Confirmar tudo",
	"command.commitAllSigned": "Confirmar Tudo (Desconectado)",
	"command.commitAllAmend": "Comitar Tudo (Corrigir)",
	"command.undoCommit": "Desfazer Ultima Confirmação",
	"command.checkout": "Fazer checkout para...",
	"command.branch": "Criar Ramificação...",
	"command.deleteBranch": "Excluir Ramificação...",
	"command.renameBranch": "Renomear o Branch",
	"command.merge": "Mesclar ramificação...",
	"command.createTag": "Criar Tag",
	"command.fetch": "Buscar",
	"command.pull": "Efetuar pull",
	"command.pullRebase": "Efetuar pull (Rebase)",
	"command.pullFrom": "Fazer pull de...",
	"command.push": "Enviar por push",
	"command.pushTo": "Enviar por push para...",
	"command.pushWithTags": "Mover com Tags",
	"command.sync": "Sincronizar",
	"command.syncRebase": "Sincronização (Rebase)",
	"command.publish": "Publicar Ramo",
	"command.showOutput": "Mostrar Saída do Git",
	"command.ignore": "Adicionar arquivo ao .gitignore",
	"command.stashIncludeUntracked": "Estoque (incluir não controlados)",
	"command.stash": "Esconder",
	"command.stashPop": "Pop Stash...",
	"command.stashPopLatest": "Pop mais recente Stash",
	"config.enabled": "Se o git estiver habilitado",
	"config.path": "Caminho para o executável do git",
	"config.autoRepositoryDetection": "Se os repositórios devem ser detectados automaticamente",
	"config.autorefresh": "Se a atualização automática estiver habilitada",
	"config.autofetch": "Se a recuperação automática estiver habilitada",
	"config.enableLongCommitWarning": "Se mensagens longas de confirmação devem ter aviso",
	"config.confirmSync": "Confirmar antes de sincronizar repositórios git",
	"config.countBadge": "Controla o contador de distintivos do git. 'todos' considera todas as alterações. 'rastreado' considera apenas as alterações controladas. 'desligado' desliga o contador.",
	"config.checkoutType": "Controla quais tipos de ramos são listados quando executando `Checkout para... `. `todos` mostra todas as referências, `local` mostra apenas os ramos locais, `etiquetas` mostra apenas etiquetas e `remoto` mostra apenas os ramos remotos.",
	"config.ignoreLegacyWarning": "Ignora o aviso de Git legado",
	"config.ignoreMissingGitWarning": "Ignora o aviso quando Git não existir.",
	"config.ignoreLimitWarning": "Ignora o aviso quando houver muitas alterações em um repositório",
	"config.defaultCloneDirectory": "O local padrão onde clonar um repositório git",
	"config.enableSmartCommit": "Confirme todas as alterações quando não há modificações planejadas.",
	"config.enableCommitSigning": "Habilitar Commit assinando com GPG.",
	"config.discardAllScope": "Controla as alterações que são descartadas pelo comando 'Descartar todas as alterações'. 'todos' descarta todas as alterações. 'rastreados' descarta somente arquivos rastreados. 'prompt' mostra uma caixa de diálogo de alerta cada vez que a ação é executada.",
	"config.decorations.enabled": "Controla se o Git contribui cores e emblemas para o explorer e visualizador de editores abertos.",
	"config.promptToSaveFilesBeforeCommit": "Controla se o Git deve verificar arquivos não salvos antes do Commit.",
	"config.showInlineOpenFileAction": "Controla se deve mostrar uma ação Abrir Arquivo em linha na visualização de alterações do Git.",
	"config.inputValidation": "Controla quando exibir validação do campo de mensagem do commit.",
	"config.detectSubmodules": "Controla se deve detectar automaticamente os sub-módulos do git.",
	"config.detectSubmodulesLimit": "Controla o limite de sub-módulos git detectados.",
	"colors.modified": "Cor para recursos modificados.",
	"colors.deleted": "Cor para recursos excluídos.",
	"colors.untracked": "Cor para recursos não controlados.",
	"colors.ignored": "Cor para recursos ignorados.",
	"colors.conflict": "Cor para recursos com conflitos.",
	"colors.submodule": "Cor para recursos de sub-módulos."
}