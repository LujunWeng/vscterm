{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "Git",
	"description": "Git Entegrasyonu",
	"command.clone": "Kopyala",
	"command.init": "Depo Oluştur",
	"command.close": "Depoyu Kapat",
	"command.refresh": "Yenile",
	"command.openChange": "Değişiklikleri Aç",
	"command.openFile": "Dosya Aç",
	"command.openHEADFile": "Dosya Aç (HEAD)",
	"command.stage": "Değişiklikleri Hazırla",
	"command.stageAll": "Tüm Değişiklikleri Hazırla",
	"command.stageSelectedRanges": "Seçili Aralığı Hazırla",
	"command.revertSelectedRanges": "Seçili Aralığı Geri Al",
	"command.stageChange": "Değişikliği Hazırla",
	"command.revertChange": "Değişikliği Geri Al",
	"command.unstage": "Değişiklikleri Hazırlık Alanından Geri Al",
	"command.unstageAll": "Tüm Değişiklikleri Hazırlık Alanından Geri Al",
	"command.unstageSelectedRanges": "Seçili Alanı Hazırlık Alanından Geri Al",
	"command.clean": "Değişiklikleri Göz Ardı Et",
	"command.cleanAll": "Tüm Değişiklikleri Göz Ardı Et",
	"command.commit": "Commit'le",
	"command.commitStaged": "Hazırlananları Commit'le",
	"command.commitStagedSigned": "Hazırlananları Commit'le (İmzalı)",
	"command.commitStagedAmend": "Hazırlananları Commit'le (Değiştir)",
	"command.commitAll": "Tümünü Commit'le",
	"command.commitAllSigned": "Tümünü Commit'le (İmzalı)",
	"command.commitAllAmend": "Tümünü Commit'le (Değiştir)",
	"command.undoCommit": "Son Commit'i Geri Al",
	"command.checkout": "Geçiş yap...",
	"command.branch": "Dal Oluştur...",
	"command.deleteBranch": "Dalı Sil...",
	"command.renameBranch": "Dalı Yeniden Adlandır...",
	"command.merge": "Dalı Birleştir...",
	"command.createTag": "Etiket Oluştur",
	"command.fetch": "Al",
	"command.pull": "Çek",
	"command.pullRebase": "Çek (Yeniden Adresle)",
	"command.pullFrom": "Şuradan Çek...",
	"command.push": "Gönder",
	"command.pushTo": "Gönder...",
	"command.pushWithTags": "Etiketlerle Gönder",
	"command.sync": "Senkronize Et",
	"command.syncRebase": "Eşitle (Yeniden Adresle)",
	"command.publish": "Dalı Yayınla",
	"command.showOutput": "Git Çıktısını Göster",
	"command.ignore": ".gitignore'a Dosya Ekle",
	"command.stashIncludeUntracked": "Geçici Olarak Sakla(İzlenmeyenleri Dahil Et)",
	"command.stash": "Geçici Olarak Sakla",
	"command.stashPop": "Geçici Olarak Saklananı Geri Yükle...",
	"command.stashPopLatest": "En Son Geçici Olarak Saklananı Geri Yükle",
	"config.enabled": "Git'in etkinleştirilip etkinleştirilmediği",
	"config.path": "Çalıştırılabilir Git dosyasının yolu",
	"config.autoRepositoryDetection": "Depoların otomatik olarak algılanıp algılanmayacağı",
	"config.autorefresh": "Otomatik yenilemenin etkinleştirilip etkinleştirilmediği",
	"config.autofetch": "Otomatik getirmenin etkinleştirilip etkinleştirilmediği",
	"config.enableLongCommitWarning": "Uzun commit mesajları hakkında uyarıda bulunulup bulunulmayacağı",
	"config.confirmSync": "Git depolarını senkronize etmeden önce onaylayın",
	"config.countBadge": "Git gösterge sayacını denetler. `all` tüm değişiklikleri sayar. `tracked` sadece izlenen değişikliklikleri sayar. `off` ise kapatır.",
	"config.checkoutType": "`Geçiş Yap...` çalıştırılırken listelenecek dal türlerini denetler. `all` tüm başvuruları gösterir, `local` sadece yerel dalları gösterir, `tags` sadece etiketleri gösterir ve `remote` sadece uzak uçbirim dallarını gösterir.",
	"config.ignoreLegacyWarning": "Eski Git uyarısını görmezden gelir",
	"config.ignoreMissingGitWarning": "Git mevcut olmadığında uyarıyı yok sayar",
	"config.ignoreLimitWarning": "Bir depoda çok fazla değişiklik var uyarısını görmezden gelir",
	"config.defaultCloneDirectory": "Bir git deposunun kopyalanacağı varsayılan konum",
	"config.enableSmartCommit": "Hazırlanan değişiklik yoksa tüm değişiklikleri commit'le.",
	"config.enableCommitSigning": "GPG ile commit imzalamayı etkinleştirir.",
	"config.discardAllScope": "`Tüm Değişiklikleri Göz Ardı Et` komutuyla hangi değişikliklerin göz ardı edileceğini denetler. `all` tüm değişiklikleri göz ardı eder. `tracked` sadece izlenen dosyaları göz ardı eder. `prompt` eylem her çalıştığında bir onay penceresi gösterir.",
	"config.decorations.enabled": "Git'in gezgine ve açık düzenleyiciler görünümüne renkler ve göstergeler ile ekleme yapıp yapmadığını denetler.",
	"config.promptToSaveFilesBeforeCommit": "Commit'lemeden önce Git'in kaydedilmemiş dosyaları kontrol edip etmeyeceğini denetler.",
	"config.showInlineOpenFileAction": "Git değişiklikleri görünümünde satır içi Dosyayı Aç eyleminin gösterilip gösterilmeyeceğini denetler.",
	"config.inputValidation": "Commit mesajı doğrulamasının ne zaman gösterileceğini kontrol eder.",
	"config.detectSubmodules": "Git alt modüllerin otomatik olarak tespit edilip edilmeyeceğini denetler.",
	"config.detectSubmodulesLimit": "Algılanan git alt modüllerinin limitini denetler.",
	"colors.modified": "Değiştirilen kaynakların rengi.",
	"colors.deleted": "Silinen kaynakların rengi.",
	"colors.untracked": "İzlenmeyen kaynakların rengi.",
	"colors.ignored": "Yok sayılan kaynakların rengi.",
	"colors.conflict": "Çakışma içeren kaynakların rengi.",
	"colors.submodule": "Alt modül kaynaklarının rengi."
}