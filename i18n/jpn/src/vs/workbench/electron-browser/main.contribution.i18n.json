{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"view": "表示",
	"help": "ヘルプ",
	"file": "ファイル",
	"workspaces": "ワークスペース",
	"developer": "開発者",
	"workbenchConfigurationTitle": "ワークベンチ",
	"showEditorTabs": "開いているエディターをタブに表示するかどうかを制御します。",
	"workbench.editor.labelFormat.default": "ファイルの名前を表示します。タブが有効かつ 1 つのグループ内の 2 つの同名ファイルがあるときに各ファイルのパスの区切り記号が追加されます。タブを無効にすると、エディターがアクティブな時にワークスペース フォルダーの相対パスが表示されます。",
	"workbench.editor.labelFormat.short": "ディレクトリ名に続けてファイル名を表示します。",
	"workbench.editor.labelFormat.medium": "ワークスペース フォルダーからの相対パスに続けてファイル名を表示します。",
	"workbench.editor.labelFormat.long": "絶対パスに続けてファイル名を表示します。",
	"tabDescription": "エディターのラベルの書式を制御します。例としてこの設定を変更することでファイルの場所を理解しやすくなります:\n- short: 'parent'\n- medium: 'workspace/src/parent'\n- long: '/home/user/workspace/src/parent'\n- default: '.../parent', 　別タブで、同じタイトルを共有する場合や、相対的なワークスペース パス タブが無効になっている場合",
	"editorTabCloseButton": "エディター タブの閉じるボタンの位置を制御するか、[off] に設定した場合に無効にします。",
	"tabSizing": "エディターのタブの大きさを制御します。常に完全なエディター ラベルを表示するのに足りるタブの大きさを維持するには 'fit' を設定します。すべてのタブを一度に表示するには利用可能なスペースが足りない場合に、タブを縮小可能にするには 'shrink' を設定します。",
	"showIcons": "開いているエディターをアイコンで表示するかどうかを制御します。これには、アイコンのテーマを有効にする必要もあります。",
	"enablePreview": "開かれるエディターをプレビューとして表示するかどうかを制御します。プレビュー エディターは (例: ダブル クリックまたは編集などによって) 変更される時まで再利用し、斜体で表示します。",
	"enablePreviewFromQuickOpen": "Quick Open で開いたエディターをプレビューとして表示するかどうかを制御します。プレビュー エディターは、保持されている間、再利用されます (ダブルクリックまたは編集などによって)。",
	"closeOnFileDelete": "ファイルを表示しているエディターを、ファイルが削除されるかその他のプロセスによって名前を変更された場合に、自動的に閉じるかどうかを制御します。これを無効にすると、このような場合にエディターはダーティで開かれたままになります。アプリケーション内で削除すると、必ずエディターは閉じられ、ダーティ ファイルは閉じられることがなく、データは保存されませんのでご注意ください。",
	"editorOpenPositioning": "エディターを開く場所を制御します。'left' または 'right' を選択すると現在アクティブになっているエディターの左または右にエディターを開きます。'first' または 'last' を選択すると現在アクティブになっているエディターとは別個にエディターを開きます。",
	"revealIfOpen": "任意の表示グループが開かれた場合に、そこにエディターを表示するかどうかを制御します。無効にした場合、エディターは現在のアクティブなエディター グループに優先して開かれます。有効にした場合は、現在のアクティブなエディター グループにもう一度開くのではなく、既に開いているエディターが表示されます。特定のグループ内や現在アクティブなグループの横に強制的にエディターを開いた場合などに、この設定が無視される場合もあることにご注意ください。",
	"swipeToNavigate": "3 本の指で横方向にスワイプすると、開いているファイル間を移動できます。",
	"commandHistory": "コマンド パレットで最近使用したコマンド履歴を保持する数を制御します。0 に設定するとコマンド履歴を無効にします。",
	"preserveInput": "次回開いたとき、コマンド パレットの最後の入力を復元するかどうかを制御します。",
	"closeOnFocusLost": "フォーカスを失ったときに Quick Open を自動的に閉じるかどうかを制御します。",
	"openDefaultSettings": "設定を開くとすべての既定の設定を表示するエディターも開くかどうかを制御します。",
	"sideBarLocation": "サイド バーの位置を制御します。ワークベンチの左右のいずれかに表示できます。",
	"panelDefaultLocation": "パネルの既定の位置を制御します。ワークベンチの下部または右のいずれかに表示できます。",
	"statusBarVisibility": "ワークベンチの下部にステータス バーを表示するかどうかを制御します。",
	"activityBarVisibility": "ワークベンチでのアクティビティ バーの表示をコントロールします。",
	"viewVisibility": "ビュー ヘッダー アクションを表示するかどうかを制御します。ビュー ヘッダー アクションは常に表示されるか、パネルをフォーカスやホバーしたときのみ表示のいずれかです。",
	"fontAliasing": "ワークベンチのフォント エイリアシング方法を制御します。\n- default: サブピクセル方式でフォントを滑らかにします。ほとんどの非 Retina ディスプレイでもっとも鮮明なテキストを提供します\n- antialiased: サブピクセルとは対照的に、ピクセルのレベルでフォントを滑らかにします。フォント全体がより細く見えます\n- none: フォントのスムージングを無効にします。テキストをぎざぎざな尖ったエッジで表示します\n- auto: ディスプレイの DPI に基づいて自動的に `default` か `antialiased` を適用します",
	"workbench.fontAliasing.default": "サブピクセル方式でフォントを滑らかにします。ほとんどの非 Retina ディスプレイでもっとも鮮明なテキストを提供します。",
	"workbench.fontAliasing.antialiased": "サブピクセルとは対照的に、ピクセルのレベルでフォントを滑らかにします。フォント全体がより細く見えるようになります。",
	"workbench.fontAliasing.none": "フォントのスムージングを無効にします。テキストをぎざぎざな尖ったエッジで表示します。",
	"workbench.fontAliasing.auto": "ディスプレイの DPI に基づいて自動的に `default` か `antialiased` を適用します。",
	"enableNaturalLanguageSettingsSearch": "設定で自然文検索モードを有効にするかどうかを制御します。",
	"windowConfigurationTitle": "ウィンドウ",
	"window.openFilesInNewWindow.on": "新しいウィンドウでファイルを開きます",
	"window.openFilesInNewWindow.off": "ファイルのフォルダーが開かれていたウィンドウまたは最後のアクティブ ウィンドウでファイルを開きます",
	"window.openFilesInNewWindow.defaultMac": "Dock または Finder を使用して開いたときを除き、ファイルのフォルダーを開いているウィンドウまたは最後のアクティブ ウィンドウでファイルを開きます",
	"window.openFilesInNewWindow.default": "アプリケーション内から選択したとき (例: ファイル メニュー介したとき) を除き 、新しいウィンドウでファイルを開きます",
	"openFilesInNewWindowMac": "ファイルを新しいウィンドウで開くかどうかを制御します。\n- default: Dock または Finder を使用して開いたときを除き、ファイルのフォルダーを開いているウィンドウまたは最後のアクティブ ウィンドウでファイルを開きます\n- on: 新しいウィンドウでファイルを開きます\n- off: ファイルのフォルダーを開いているフォルダーまたは最後のアクティブ ウィンドウでファイルを開きます\nこの設定は無視される場合もあります (例: -new-window または -reuse-window コマンド ライン オプションを使用する場合など)。",
	"openFilesInNewWindow": "ファイルを新しいウィンドウで開くかどうかを制御します。\n- default: アプリケーション内から選択したとき (例: ファイル メニュー介したとき) を除き 、新しいウィンドウでファイルを開きます\n- on: 新しいウィンドウでファイルを開きます\n- off: ファイルのフォルダーを開いているフォルダーまたは最後のアクティブ ウィンドウでファイルを開きます\nこの設定は無視される場合もあります (例: -new-window または -reuse-window コマンド ライン オプションを使用する場合など)。",
	"window.openFoldersInNewWindow.on": "新しいウィンドウでフォルダーを開きます",
	"window.openFoldersInNewWindow.off": "フォルダーは、最後のアクティブ ウィンドウで開きます",
	"window.openFoldersInNewWindow.default": "フォルダーがアプリケーション内から (たとえば、[ファイル] メニューから) 選択された場合を除いて、新しいウィンドウでフォルダーを開きます",
	"openFoldersInNewWindow": "フォルダーを新しいウィンドウで開くか、最後のアクティブ ウィンドウで開くかを制御します。\n- default: アプリケーション内で ([ファイル] メニューなどから) 選択したものでなければ、新しいウィンドウでフォルダーを開く\n- on: 新しいウィンドウでフォルダーを開く\n- off: 最後のアクティブ ウィンドウでフォルダーを開く\nこの設定は無視される場合もあります (-new-window または -reuse-window コマンド ライン オプションを使用する場合など)。",
	"window.openWithoutArgumentsInNewWindow.on": "新しい空のウィンドウを開く",
	"window.openWithoutArgumentsInNewWindow.off": "最後にアクティブだった実行中のインスタンスにフォーカスする",
	"openWithoutArgumentsInNewWindow": "引数なしで 2 つ目のインスタンスを起動するとき、新しい空のウィンドウを開くか、最後に実行されていたウィンドウにフォーカスするかを制御します。\n- on: 新しい空のウィンドウを開く\n- off: 最後に実行されていたウィンドウにフォーカスする\nこの設定は無視される場合もあります (-new-window または -reuse-window コマンド ライン オプションを使用する場合など)。",
	"window.reopenFolders.all": "すべてのウィンドウを再度開きます。",
	"window.reopenFolders.folders": "すべてのフォルダーを再度開きます。空のワークスペースは復元されません。",
	"window.reopenFolders.one": "最後にアクティブだったウィンドウを再び開きます。",
	"window.reopenFolders.none": "ウィンドウ再度開きません。常に空のウィンドウで開始します。",
	"restoreWindows": "再起動後にワークスペースを再度開く方法を制御します。'none' を選択すると常に空のワークスペースで開始します。'one' を選択すると最後に使用したウィンドウを再度開きます。'folders' を選択すると開かれていたフォルダーとすべてのウィンドウを再度開きます。'all' を選択すると前回のセッションのすべてのウィンドウを再度開きます。",
	"restoreFullscreen": "全画面表示モードで終了した場合に、ウィンドウを全画面表示モードに復元するかどうかを制御します。",
	"zoomLevel": "ウィンドウのズーム レベルを調整します。元のサイズは 0 で、1 つ上げるごとに (1 など) 20% ずつ拡大することを表し、1 つ下げるごとに (-1 など) 20% ずつ縮小することを表します。小数点以下の桁数を入力して、さらに細かくズーム レベルを調整することもできます。",
	"title": "アクティブなエディターに基づいてウィンドウのタイトルを制御します。変数は、コンテキストに基づいて置換されます:\n${activeEditorShort}: ファイル名 (例: myFile.txt)\n${activeEditorMedium}: ワークスペース フォルダーへの相対パス (例: myFolder/myFile.txt)\n${activeEditorLong}: ファイルの完全なパス (例: /Users/Development/myProject/myFolder/myFile.txt)\n${folderName}: ファイルが含まれているワークスペース フォルダー名 (例: myFolder)\n${folderPath}: ァイルが含まれているワークスペース フォルダーのファイルパス (例: /Users/Development/myFolder)\n${rootName}: ワークスペースの名前 (例: myFolder や myWorkspace)\n${rootPath}: ワークスペースのファイル パス (例: /Users/Development/myWorkspace)\n${appName}: 例: VS Code\n${dirty}: アクティブなエディターがダーティである場合のダーティ インジゲーター\n${separator}: 値のある変数かスタティック テキストで囲まれた場合にのみ表示される条件付き区切り記号 (\" - \")",
	"window.newWindowDimensions.default": "新しいウィンドウを画面の中央に開きます。",
	"window.newWindowDimensions.inherit": "新しいウィンドウを、最後にアクティブだったウィンドウと同じサイズで開きます。",
	"window.newWindowDimensions.maximized": "新しいウィンドウを最大化した状態で開きます。",
	"window.newWindowDimensions.fullscreen": "新しいウィンドウを全画面表示モードで開きます。",
	"newWindowDimensions": "既に 1 つ以上のウィンドウを開いているとき、新しく開くウィンドウのサイズを制御します。既定では、新しいウィンドウを画面中央に小さいサイズで開きます。'inherit' に設定すると、最後のアクティブ ウィンドウと同じサイズで開きます。'maximized' に設定するとウィンドウは最大サイズで開き、'fullscreen' に設定すると全画面になります。この設定は、最初に開いたウィンドウに適用されないことに注意してください。最初のウィンドウは常に、前回閉じたサイズと位置で復元します。",
	"closeWhenEmpty": "最後のエディターを閉じたときに、ウィンドウも閉じるかどうかを制御します。この設定はフォルダーを表示していないウィンドウにのみ適用されます。",
	"window.menuBarVisibility.default": "メニューは全画面表示モードの場合にのみ非表示です。",
	"window.menuBarVisibility.visible": "全画面表示モードの場合も含めて、常にメニューが表示されます。",
	"window.menuBarVisibility.toggle": "メニューは非表示ですが、Alt キーを押すと表示できます。",
	"window.menuBarVisibility.hidden": "メニューは常に非表示です。",
	"menuBarVisibility": "メニュー バーの表示/非表示を制御します。'切り替え' 設定は Alt キーを 1 回押すとメニュー バーの表示/非表示が切り替わることを意味します。既定では、ウィンドウが全画面表示の場合を除き、メニュー バーは表示されます。",
	"enableMenuBarMnemonics": "有効にすると、Alt キー ショートカットを使用してメイン メニューを開くことができます。ニーモニックを無効にすると、これらの Alt キー ショートカットをエディター コマンドの代わりにバインドできます。",
	"autoDetectHighContrast": "有効にすると、Windows でハイ コントラスト テーマが使用されている場合にはハイ コントラスト テーマに自動的に変更され、Windows のハイ コントラスト テーマから切り替えられている場合にはダーク テーマに自動的に変更されます。",
	"titleBarStyle": "ウィンドウのタイトル バーの外観を調整します。変更を適用するには、完全に再起動する必要があります。",
	"window.nativeTabs": "macOS Sierra ウィンドウ タブを有効にします。この変更を適用するには完全な再起動が必要であり、ネイティブ タブでカスタムのタイトル バー スタイルが構成されていた場合はそれが無効になることに注意してください。",
	"window.smoothScrollingWorkaround": "最小化した VS Code ウィンドウを元のサイズに戻したあと、スクロールが滑らかにならない場合はこの回避策を有効にしてください。これは Microsoft Surface のような高精度タッチパッドを備えたデバイスで、スクロールの開始が遅れる問題 (https://github.com/Microsoft/vscode/issues/13612) の回避策です。有効にすると、最小化の状態からウィンドウを元に戻したあとに少しレイアウトがちらつきますが、そうでなければ無害です。",
	"window.clickThroughInactive": "有効な場合、非アクティブなウィンドウをクリックするとウィンドウがアクティブになり、クリック可能な場合はマウスの下の要素がトリガーされます。無効にすると、非アクティブなウィンドウの任意の場所をクリックするとそのウィンドウがアクティブになり、要素には 2 回目のクリックが必要になります。",
	"zenModeConfigurationTitle": "Zen Mode",
	"zenMode.fullScreen": "Zen Mode をオンにするとワークベンチを自動的に全画面モードに切り替えるかどうかを制御します。",
	"zenMode.centerLayout": "Zen Mode をオンにしたときにレイアウトを中央揃えにするかどうかを制御します。",
	"zenMode.hideTabs": "Zen Mode をオンにしたときにワークベンチ タブも非表示にするかどうかを制御します。",
	"zenMode.hideStatusBar": "Zen Mode をオンにするとワークベンチの下部にあるステータス バーを非表示にするかどうかを制御します。",
	"zenMode.hideActivityBar": "Zen Mode をオンにするとワークベンチの左側にあるアクティビティ バーを非表示にするかを制御します。",
	"zenMode.restore": "Zen Mode で終了したウィンドウを Zen Mode に復元するかどうかを制御します。"
}