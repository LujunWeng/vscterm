{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"editorConfigurationTitle": "エディター",
	"fontFamily": "フォント ファミリを制御します。",
	"fontWeight": "フォントの太さを制御します。",
	"fontSize": "フォント サイズをピクセル単位で制御します。",
	"lineHeight": "行の高さを制御します。fontSize に基づいて lineHeight を計算する場合には、0 を使用します。",
	"letterSpacing": "文字の間隔をピクセル単位で制御します。",
	"lineNumbers.off": "行番号は表示されません。",
	"lineNumbers.on": "行番号は、絶対数として表示されます。",
	"lineNumbers.relative": "行番号は、カーソル位置までの行数として表示されます。",
	"lineNumbers.interval": "行番号は 10 行ごとに表示されます。",
	"rulers": "等幅フォントの特定番号の後ろに垂直ルーラーを表示します。複数のルーラーには複数の値を使用します。配列が空の場合はルーラーを表示しません。",
	"wordSeparators": "単語に関連したナビゲーションまたは操作を実行するときに、単語の区切り文字として使用される文字",
	"tabSize": "1 つのタブに相当するスペースの数。`editor.detectIndentation` がオンの場合、この設定はファイル コンテンツに基づいて上書きされます。",
	"tabSize.errorMessage": "'number' が必要です。`editor.detectIndentation` 設定によって値 \"auto\" が置き換えられていることに注意してください。",
	"insertSpaces": "Tab キーを押すとスペースが挿入されます。`editor.detectIndentation` がオンの場合、この設定はファイル コンテンツに基づいて上書きされます。",
	"insertSpaces.errorMessage": "'boolean' が必要です。`editor.detectIndentation` 設定によって値 \"auto\" が置き換えられていることに注意してください。",
	"detectIndentation": "ファイルを開くと、そのファイルの内容に基づいて `editor.tabSize` と `editor.insertSpaces` が検出されます。",
	"roundedSelection": "選択範囲の角を丸くするかどうかを制御します",
	"scrollBeyondLastLine": "エディターで最後の行を越えてスクロールするかどうかを制御します",
	"smoothScrolling": "アニメーションでエディターをスクロールするかどうかを制御します",
	"minimap.enabled": "ミニマップを表示するかどうかを制御します",
	"minimap.side": "ミニマップを表示する場所を制御します。",
	"minimap.showSlider": "ミニマップのスライダーを自動的に非表示にするかどうかを制御します。",
	"minimap.renderCharacters": "行に (カラー ブロックではなく) 実際の文字を表示します",
	"minimap.maxColumn": "表示するミニマップの最大幅を特定の桁数に制限します",
	"find.seedSearchStringFromSelection": "エディターの選択から検索ウィジェット内の検索文字列を与えるかどうかを制御します",
	"find.autoFindInSelection": "エディター内で複数の文字もしくは行が選択されているときに選択範囲を検索するフラグを有効にするかどうかを制御します",
	"find.globalFindClipboard": "macOS で検索ウィジェットが共有の検索クリップボードを読み取りまたは変更するかどうかを制御します",
	"wordWrap.off": "行を折り返しません。",
	"wordWrap.on": "行をビューポートの幅で折り返します。",
	"wordWrap.wordWrapColumn": "行を 'editor.wordWrapColumn' で折り返します。",
	"wordWrap.bounded": "ビューポートと 'editor.wordWrapColumn' の最小値で行を折り返します。",
	"wordWrap": "行の折り返し方法を制御します。次の値を指定できます。\n - 'off' (折り返さない),\n - 'on' (ビューポート折り返し),\n - 'wordWrapColumn' ('editor.wordWrapColumn' で折り返し) or\n - 'bounded' (ビューポートと 'editor.wordWrapColumn' の最小値で折り返し).",
	"wordWrapColumn": "'editor.wordWrap' が 'wordWrapColumn' または 'bounded' の場合に、エディターの折り返し桁を制御します。",
	"mouseWheelScrollSensitivity": "マウス ホイール スクロール イベントの `deltaX` と `deltaY` で使用される乗数",
	"multiCursorModifier.ctrlCmd": "Windows および Linux 上の `Control` キーと macOS 上の `Command` キーに割り当てます。",
	"multiCursorModifier.alt": "Windows および Linux 上の `Alt` キーと macOS 上の `Option` キーに割り当てます。",
	"multiCursorModifier": "マウスを使用して複数のカーソルを追加するときに使用する修飾キーです。`ctrlCmd` は Windows および Linux 上の `Control` キーと macOS 上の `Command` キーに割り当てます。「定義に移動」や「リンクを開く」のマウス操作は、マルチカーソルの修飾キーと競合しないように適用されます。",
	"multiCursorMergeOverlapping": "複数のカーソルが重なっているときは、マージします。",
	"quickSuggestions.strings": "文字列内でクイック候補を有効にします。",
	"quickSuggestions.comments": "コメント内でクイック候補を有効にします。",
	"quickSuggestions.other": "文字列およびコメント外でクイック候補を有効にします。",
	"quickSuggestions": "入力中に候補を自動的に表示するかどうかを制御します",
	"quickSuggestionsDelay": "クイック候補が表示されるまでの待ち時間 (ミリ秒) を制御します",
	"parameterHints": "入力時にパラメーター ドキュメントと型情報を表示するポップアップを有効にする",
	"autoClosingBrackets": "エディターで左角かっこの後に自動的に右角かっこを挿入するかどうかを制御します",
	"formatOnType": "エディターで入力後に自動的に行の書式設定を行うかどうかを制御します",
	"formatOnPaste": "貼り付けた内容がエディターにより自動的にフォーマットされるかどうかを制御します。フォーマッタを使用可能にする必要があります。また、フォーマッタがドキュメント内の範囲をフォーマットできなければなりません。",
	"autoIndent": "ユーザーが入力や貼り付け、行の移動をしたとき、エディターがインデントを自動的に調整するかどうかを制御します。言語のインデント ルールを使用できる必要があります。",
	"suggestOnTriggerCharacters": "トリガー文字の入力時に候補が自動的に表示されるようにするかどうかを制御します",
	"acceptSuggestionOnEnter": "'Tab' キーに加えて 'Enter' キーで候補を受け入れるかどうかを制御します。改行の挿入や候補の反映の間であいまいさを解消するのに役立ちます。'smart' 値は文字を変更するときに、Enter キーを押すだけで提案を反映することを意味します。",
	"acceptSuggestionOnCommitCharacter": "コミット文字で候補を受け入れるかどうかを制御します。たとえば、JavaScript ではセミコロン (';') をコミット文字にして、候補を受け入れてその文字を入力することができます。",
	"snippetSuggestions.top": "他の候補の上にスニペットの候補を表示します。",
	"snippetSuggestions.bottom": "他の候補の下にスニペットの候補を表示します。",
	"snippetSuggestions.inline": "他の候補と一緒にスニペットの候補を表示します。",
	"snippetSuggestions.none": "スニペットの候補を表示しません。",
	"snippetSuggestions": "他の修正候補と一緒にスニペットを表示するかどうか、およびその並び替えの方法を制御します。",
	"emptySelectionClipboard": "選択範囲を指定しないでコピーする場合に現在の行をコピーするかどうかを制御します。",
	"wordBasedSuggestions": "ドキュメント内の単語に基づいて入力候補を計算するかどうかを制御します。",
	"suggestSelection.first": "常に最初の候補を選択します。",
	"suggestSelection.recentlyUsed": "追加入力によって選択されたものがなければ、最近の候補を選択します。例: `console.| -> console.log` (`log` は最近入力されたため)。",
	"suggestSelection.recentlyUsedByPrefix": "これらの候補を入力した前のプレフィックスに基づいて候補を選択します。例: `co -> console`、`con -> const`。",
	"suggestSelection": "候補リストを表示するときに候補を事前に選択する方法を制御します。",
	"suggestFontSize": "候補のウィジェットのフォント サイズ",
	"suggestLineHeight": "候補のウィジェットの行の高さ",
	"selectionHighlight": "エディターで選択範囲に類似する一致箇所を強調表示するかどうかを制御します",
	"occurrencesHighlight": "エディターでセマンティック シンボルの出現箇所を強調表示するかどうかを制御します",
	"overviewRulerLanes": "概要ルーラーの同じ位置に表示できる装飾の数を制御します",
	"overviewRulerBorder": "概要ルーラーの周囲に境界線が描画されるかどうかを制御します。",
	"cursorBlinking": "カーソルのアニメーション方式を制御します。",
	"mouseWheelZoom": "Ctrl キーを押しながらマウス ホイールを使用してエディターのフォントをズームします",
	"cursorStyle": "カーソルのスタイルを制御します。指定できる値は 'block'、'block-outline'、'line'、'line-thin'、'underline'、'underline-thin' です",
	"cursorWidth": "editor.cursorStyle が 'line' に設定されている場合、カーソルの幅を制御する",
	"fontLigatures": "フォントの合字を使用します",
	"hideCursorInOverviewRuler": "概要ルーラーでカーソルを非表示にするかどうかを制御します。",
	"renderWhitespace": "エディターで空白文字を表示する方法を制御します。'none'、'boundary' および 'all' が使用可能です。'boundary' オプションでは、単語間の単一スペースは表示されません。",
	"renderControlCharacters": "エディターで制御文字を表示する必要があるかどうかを制御します",
	"renderIndentGuides": "エディターでインデントのガイドを表示する必要があるかどうかを制御します",
	"renderLineHighlight": "エディターが現在の行をどのように強調表示するかを制御します。考えられる値は 'none'、'gutter'、'line'、'all' です。",
	"codeLens": "エディターが CodeLens を表示するかどうかを制御します",
	"folding": "エディターでコードの折りたたみを有効にするかどうかを制御します",
	"foldingStrategyAuto": "利用可能であれば、言語に特有の折りたたみ方式を使用して、そうでない場合はインデント方式に戻ります。",
	"foldingStrategyIndentation": "常にインデントに基づく折りたたみ方式を使用します",
	"foldingStrategy": "折りたたみ範囲の計算方法を制御します。'auto' は利用可能であれば言語固有の折りたたみ方式を使用します。'indentation' は常にインデントに基づく折りたたみ方式を使用します。",
	"showFoldingControls": "余白上の折りたたみコントロールを自動的に非表示にするかどうかを制御します 。",
	"matchBrackets": "かっこを選択すると、対応するかっこを強調表示します。",
	"glyphMargin": "エディターで縦のグリフ余白が表示されるかどうかを制御します。ほとんどの場合、グリフ余白はデバッグに使用されます。",
	"useTabStops": "空白の挿入や削除はタブ位置に従って行われます",
	"trimAutoWhitespace": "自動挿入された末尾の空白を削除する",
	"stablePeek": "エディターのコンテンツをダブルクリックするか、Esc キーを押しても、ピーク エディターを開いたままにします。",
	"dragAndDrop": "ドラッグ アンド ドロップによる選択範囲の移動をエディターが許可する必要があるかどうかを制御します。",
	"accessibilitySupport.auto": "エディターはスクリーン リーダーがいつ接続されたかを検出するためにプラットフォーム API を使用します。",
	"accessibilitySupport.on": "エディターは永続的にスクリーン リーダー向けに最適化されます。",
	"accessibilitySupport.off": "エディターはスクリーン リーダー向けに最適化されません。",
	"accessibilitySupport": "エディターをスクリーン リーダーに最適化されたモードで実行するかどうかを制御します。",
	"links": "エディターがリンクを検出してクリック可能な状態にするかどうかを制御します",
	"colorDecorators": "エディターでインライン カラー デコレーターと色の選択を表示する必要があるかどうかを制御します。",
	"codeActions": "コード アクション (lightbulb) を有効にする",
	"codeActionsOnSave.organizeImports": "保存時にインポートの整理を実行しますか?",
	"codeActionsOnSave": "保存時に実行されるコードアクションの種類。",
	"codeActionsOnSaveTimeout": "保存時に実行されるコード アクションのタイムアウト値。",
	"selectionClipboard": "Linux の PRIMARY クリップボードをサポートするかどうかを制御します。",
	"sideBySide": "差分エディターが差分を横に並べて表示するか、行内に表示するかを制御します",
	"ignoreTrimWhitespace": "差分エディターが、先頭または末尾の空白の変更を差分として表示するかどうかを制御します。",
	"largeFileOptimizations": "大きなファイルでメモリが集中する特定の機能を無効にするための特別な処理。",
	"renderIndicators": "差分エディターが追加/削除された変更に +/- インジケーターを示すかどうかを制御します"
}