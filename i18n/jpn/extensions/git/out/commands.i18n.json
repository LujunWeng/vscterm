{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"tag at": "{0} のタグ",
	"remote branch at": "{0} でのリモート ブランチ",
	"create branch": "$(plus) 新しいブランチを作成",
	"repourl": "リポジトリ URL",
	"selectFolder": "リポジトリの場所を選択",
	"cloning": "Git リポジトリ '{0}' を複製しています...",
	"proposeopen": "クローンしたリポジトリを開きますか?",
	"openrepo": "リポジトリを開く",
	"add": "ワークスペースに追加",
	"proposeopen2": "複製したリポジトリを開きますか? または現在のワークスペースに追加しますか?",
	"init": "Git リポジトリを初期化するワークスペース フォルダーを選択してください",
	"init repo": "リポジトリの初期化",
	"create repo": "リポジトリの初期化",
	"are you sure": "'{0}' に Git リポジトリを作成します。続行してもよろしいですか?",
	"HEAD not available": "'{0}' の HEAD バージョンは利用できません。",
	"confirm stage files with merge conflicts": "マージの競合がある {0} 個のファイルをステージしてもよろしいですか?",
	"confirm stage file with merge conflicts": "マージの競合がある {0} をステージしてもよろしいですか? ",
	"yes": "はい",
	"confirm revert": "{0} で選択した変更を元に戻しますか?",
	"revert": "変更を元に戻す",
	"discard": "変更を破棄",
	"confirm delete": "本当に {0} を削除してもよろしいですか?",
	"delete file": "ファイルを削除",
	"confirm discard": "{0} の変更を破棄しますか?",
	"confirm discard multiple": "{0} 個のファイルの変更内容を破棄しますか?",
	"warn untracked": "未追跡ファイル {0} が削除されます!",
	"confirm discard all single": "{0} の変更を破棄しますか?",
	"confirm discard all": "{0} 個のファイルのすべての変更を破棄してもよろしいですか?\nこの変更は元に戻すことができません!\n現在のワーキング セットは永久に失われます。",
	"discardAll multiple": "1 つのファイルを破棄",
	"discardAll": "{0} 個のファイルをすべて破棄",
	"confirm delete multiple": "本当に {0} 個のファイルを削除してもよろしいですか?",
	"delete files": "複数のファイルを削除",
	"there are untracked files single": "破棄すると次の未追跡ファイルがディスクから削除されます: {0}。",
	"there are untracked files": "破棄すると {0} 個の未追跡ファイルがディスクから削除されます。",
	"confirm discard all 2": "{0}\n\nこの変更は元に戻すことはできません。現在のワーキング セットは永久に失われます。",
	"yes discard tracked": "1 つの追跡ファイルを破棄",
	"yes discard tracked multiple": "{0} 個の追跡ファイルを破棄",
	"unsaved files single": "次のファイルが保存されていません: {0}。\n\nコミット前に保存しますか?",
	"unsaved files": "{0} 個の保存されていないファイルがあります。\n\nコミット前に保存しますか?",
	"save and commit": "すべて保存してコミットする",
	"commit": "とにかくコミットする",
	"no staged changes": "コミットするステージされた変更がありません。\n\nすべての変更を自動的にステージして、直接コミットしますか?",
	"always": "常に行う",
	"no changes": "コミットする必要のある変更はありません。",
	"commit message": "コミット メッセージ",
	"provide commit message": "コミット メッセージを入力してください",
	"select a ref to checkout": "チェックアウトする参照を選択",
	"branch name": "ブランチ名",
	"provide branch name": "ブランチ名を指定してください",
	"select branch to delete": "削除するブランチの選択",
	"confirm force delete branch": "ブランチ '{0}' はマージされていません。それでも削除しますか？",
	"delete branch": "ブランチの削除",
	"invalid branch name": "無効なブランチ名",
	"branch already exists": "ブランチ名 '{0}' は既に存在します",
	"select a branch to merge from": "マージ元のブランチを選択",
	"merge conflicts": "マージの競合があります。コミットする前にこれを解決してください。",
	"tag name": "タグ名",
	"provide tag name": "タグ名を入力してください",
	"tag message": "メッセージ",
	"provide tag message": "注釈付きタグにつけるメッセージを入力してください",
	"no remotes to fetch": "リポジトリには、フェッチ元として構成されているリモートがありません。",
	"no remotes to pull": "リポジトリには、プル元として構成されているリモートがありません。",
	"pick remote pull repo": "リモートを選んで、ブランチを次からプルします:",
	"no remotes to push": "リポジトリには、プッシュ先として構成されているリモートがありません。",
	"nobranch": "リモートにプッシュするブランチをチェックアウトしてください。",
	"confirm publish branch": "'{0}' ブランチに上流ブランチはありません。このブランチを公開しますか?",
	"ok": "OK",
	"push with tags success": "タグが正常にプッシュされました。",
	"pick remote": "リモートを選んで、ブランチ '{0}' を次に公開します:",
	"sync is unpredictable": "このアクションはコミットを '{0}/{1}' との間でプッシュしたりプルしたりします。",
	"never again": "OK、今後は表示しない",
	"no remotes to publish": "リポジトリには、発行先として構成されているリモートがありません。",
	"no changes stash": "スタッシュする変更がありません。",
	"provide stash message": "必要に応じてスタッシュ メッセージを入力してください",
	"stash message": "スタッシュ メッセージ",
	"no stashes": "復元するスタッシュがありません。",
	"pick stash to pop": "適用するスタッシュを選択してください",
	"clean repo": "チェックアウトの前に、リポジトリの作業ツリーを消去してください。",
	"cant push": "参照仕様をリモートにプッシュできません。最初に 'Pull' を実行して変更を統合してください。",
	"git error details": "Git: {0}",
	"git error": "Git エラー",
	"open git log": "Git ログを開く"
}