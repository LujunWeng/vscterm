{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "Git",
	"description": "Git SCM統合",
	"command.clone": "クローン",
	"command.init": "リポジトリの初期化",
	"command.close": "リポジトリを閉じる",
	"command.refresh": "最新の情報に更新",
	"command.openChange": "変更を開く",
	"command.openFile": "ファイルを開く",
	"command.openHEADFile": "HEAD のファイルを開く",
	"command.stage": "変更のステージング",
	"command.stageAll": "すべての変更をステージ",
	"command.stageSelectedRanges": "選択した範囲をステージ",
	"command.revertSelectedRanges": "選択範囲を元に戻す",
	"command.stageChange": "変更のステージング",
	"command.revertChange": "変更を元に戻す",
	"command.unstage": "変更のステージング解除",
	"command.unstageAll": "すべての変更のステージング解除",
	"command.unstageSelectedRanges": "選択した範囲のステージを解除",
	"command.clean": "変更を破棄",
	"command.cleanAll": "すべての変更を破棄",
	"command.commit": "Commit",
	"command.commitStaged": "ステージング済みをコミット",
	"command.commitStagedSigned": "コミットしてステージング (サインオフ)",
	"command.commitStagedAmend": "コミットしてステージング (修正)",
	"command.commitAll": "すべてコミット",
	"command.commitAllSigned": "すべてコミット (サインオフ)",
	"command.commitAllAmend": "すべてコミット (修正)",
	"command.undoCommit": "前回のコミットを元に戻す",
	"command.checkout": "チェックアウト先...",
	"command.branch": "ブランチを作成...",
	"command.deleteBranch": "ブランチの削除...",
	"command.renameBranch": "ブランチ名の変更...",
	"command.merge": "ブランチをマージ...",
	"command.createTag": "タグを作成",
	"command.fetch": "フェッチ",
	"command.pull": "プル",
	"command.pullRebase": "プル (リベース)",
	"command.pullFrom": "指定元からプル...",
	"command.push": "プッシュ",
	"command.pushTo": "プッシュ先...",
	"command.pushWithTags": "タグをつけてプッシュ",
	"command.sync": "同期",
	"command.syncRebase": "同期 (リベース)",
	"command.publish": "ブランチの発行",
	"command.showOutput": "Git 出力の表示",
	"command.ignore": "ファイルを .gitignore に追加",
	"command.stashIncludeUntracked": "スタッシュ (未追跡ファイルを含む)",
	"command.stash": "スタッシュ",
	"command.stashPop": "スタッシュを適用して削除...",
	"command.stashPopLatest": "最新のスタッシュを適用して削除",
	"config.enabled": "Git を有効にするかどうか",
	"config.path": "Git 実行可能ファイルのパス",
	"config.autoRepositoryDetection": "レポジトリを自動的に検出するかどうか",
	"config.autorefresh": "自動更新が有効かどうか",
	"config.autofetch": "自動フェッチが有効かどうか",
	"config.enableLongCommitWarning": "長いコミット メッセージについて警告するかどうか",
	"config.confirmSync": "Git リポジトリを同期する前に確認する",
	"config.countBadge": "Git バッジ カウンターを制御します。`all`  はすべての変更をカウントします。 `tracked` は追跡している変更のみカウントします。 `off` はカウントをオフします。",
	"config.checkoutType": "`Checkout to...` を実行するときに表示されるブランチの種類を制御します。`all` はすべての参照を表示します。`local` はローカル ブランチのみ、`tags`  はタグのみ、`remote` はリモート ブランチのみを表示します。 ",
	"config.ignoreLegacyWarning": "旧 Git の警告を無視します",
	"config.ignoreMissingGitWarning": "Git が見つからない場合の警告を無視します",
	"config.ignoreLimitWarning": "リポジトリ内に変更が多い場合は警告を無視します",
	"config.defaultCloneDirectory": "Git リポジトリをクローンする既定の場所",
	"config.enableSmartCommit": "ステージされた変更がない場合はすべての変更をコミットします。",
	"config.enableCommitSigning": "GPG によりデジタル署名されたコミットを有効にします。",
	"config.discardAllScope": "'すべての変更を破棄' コマンドによってどの変更が破棄されるかを制御します。'all' はすべての変更を破棄します。 'tracked' は追跡されているファイルだけを破棄します。 'prompt' は、アクションが実行されるたびにプロンプ​​ト ダイアログを表示します。",
	"config.decorations.enabled": "Git が配色とバッジをエクスプローラーと開いているエディターのビューに提供するかどうかを制御します。",
	"config.promptToSaveFilesBeforeCommit": "コミット前に Git が保存していないファイルを確認すべきかどうかを制御します。",
	"config.showInlineOpenFileAction": "Git 変更の表示内にインラインのファイルを開くアクションを表示するかどうかを制御します。",
	"config.inputValidation": "コミット メッセージの入力検証をいつ表示するかを制御します。",
	"config.detectSubmodules": "Git のサブモジュールを自動的に検出するかどうかを制御します。",
	"config.detectSubmodulesLimit": "Git サブモジュールの検出の制限を制御します。",
	"colors.modified": "リソースを改変した場合の配色",
	"colors.deleted": "リソースを検出した場合の配色",
	"colors.untracked": "リソースを追跡しない場合の配色",
	"colors.ignored": "リソースを無視する場合の配色",
	"colors.conflict": "リソースが競合する場合の配色",
	"colors.submodule": "サブモジュールの配色。"
}