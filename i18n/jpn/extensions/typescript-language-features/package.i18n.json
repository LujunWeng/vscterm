{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "TypeScript と JavaScript の言語機能",
	"description": "JavaScript と TypeScript ファイルに豊富な言語サポートを提供。",
	"reloadProjects.title": "プロジェクトの再読み込み",
	"configuration.typescript": "TypeScript",
	"typescript.useCodeSnippetsOnMethodSuggest.dec": "パラメーター シグネチャを含む完全な関数。",
	"typescript.tsdk.desc": "使用する tsserver と lib*.d.ts ファイルが含まれているフォルダーのパスを指定します。",
	"typescript.disableAutomaticTypeAcquisition": "型定義の自動取得を無効にします。TypeScript 2.0.6 以上が必要です。",
	"typescript.tsserver.log": "ファイルへの TS サーバーのログを有効にします。このログは TS サーバーの問題を診断するために使用できます。ログには、プロジェクトのファイルパス、ソースコード、その他の潜在的に機密性の高い情報が含まれている場合があります。",
	"typescript.tsserver.pluginPaths": "Typescript 言語サービス プラグインを検出する追加のパス。TypeScript 2.3.0以上が必要。",
	"typescript.tsserver.pluginPaths.item": "絶対または相対パスのいずれか。相対パスはワークスペース フォルダーに対して解決されます。",
	"typescript.tsserver.trace": "TS サーバーに送信されるメッセージのトレースを有効にします。このトレースは TS サーバーの問題を診断するために使用できます。トレースには、プロジェクトのファイルパス、ソースコード、その他の潜在的に機密性の高い情報が含まれている場合があります。",
	"typescript.validate.enable": "TypeScript の検証を有効/無効にします。",
	"typescript.format.enable": "既定の TypeScript フォーマッタを有効/無効にします。",
	"javascript.format.enable": "既定の JavaScript フォーマッタを有効/無効にします。",
	"format.insertSpaceAfterCommaDelimiter": "コンマ区切り記号の後のスペース処理を定義します。",
	"format.insertSpaceAfterConstructor": "コンストラクター キーワードの後にスペース処理を定義します。TypeScript が 2.3.0 以上である必要があります。",
	"format.insertSpaceAfterSemicolonInForStatements": " for ステートメント内のセミコロンの後のスペース処理を定義します。",
	"format.insertSpaceBeforeAndAfterBinaryOperators": "2 項演算子の後のスペース処理を定義します。",
	"format.insertSpaceAfterKeywordsInControlFlowStatements": "制御フロー ステートメント内のキーワードの後のスペース処理を定義します。",
	"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "匿名関数の関数キーワードの後のスペース処理を定義します。",
	"format.insertSpaceBeforeFunctionParenthesis": "関数の引数のかっこの前にあるスペース処理を定義します。TypeScript が 2.1.5. 以上である必要があります。",
	"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "左右の空でないかっこの間のスペース処理を定義します。",
	"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "左右の空でない角かっこの間のスペース処理を定義します。",
	"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "左右の空でないかっこの間のスペース処理を定義します。TypeScript が 2.3.0 以上である必要があります。",
	"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "テンプレート文字列の始め波かっこの後と終わり波かっこの前のスペース処理を定義します。TypeScript が 2.0.6 以上である必要があります。",
	"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "JSX 式の始め波かっこの後と終わり波かっこの前のスペース処理を定義します。TypeScript が 2.0.6 以上である必要があります。",
	"format.insertSpaceAfterTypeAssertion": "TypeScript の型アサーションの後のスペース処理を定義します。TypeScript が 2.4 以上である必要があります。",
	"format.placeOpenBraceOnNewLineForFunctions": "新しい行に関数の始め波かっこを配置するかどうかを定義します。",
	"format.placeOpenBraceOnNewLineForControlBlocks": "新しい行にコントロール ブロックの始め波かっこを配置するかどうかを定義します。",
	"javascript.validate.enable": "JavaScript の検証を有効/無効にします。",
	"goToProjectConfig.title": "プロジェクト構成に移動",
	"javascript.referencesCodeLens.enabled": "JavaScript ファイル内で CodeLens の参照を有効/無効にします。",
	"typescript.referencesCodeLens.enabled": "TypeScript ファイル内で CodeLens の参照を有効/無効にします。TypeScript 2.0.6 以上が必要です。",
	"typescript.implementationsCodeLens.enabled": "CodeLens の実装を有効/無効にします。TypeScript 2.2.0 以上が必要です。",
	"typescript.openTsServerLog.title": "TS サーバーのログを開く",
	"typescript.restartTsServer": "TS サーバーを再起動",
	"typescript.selectTypeScriptVersion.title": "TypeScript のバージョンの選択",
	"typescript.reportStyleChecksAsWarnings": "スタイルチェックレポートを警告扱いとする",
	"jsDocCompletion.enabled": " 自動 JSDoc コメントを有効/無効にします",
	"typescript.npm": "型定義の自動取得に使用される NPM 実行可能ファイルへのパスを指定します。TypeScript 2.3.4 以上が必要です。",
	"typescript.check.npmIsInstalled": "型定義の自動取得に NPM がインストールされているかどうかを確認します。",
	"javascript.nameSuggestions": "JavaScript の候補リスト内でファイルから一意の名前を含むかどうかを有効/無効にします。",
	"typescript.tsc.autoDetect": "tsc タスクの自動検出を制御します。'off' はこの機能を無効にします。'build' は 1 つのコンパイル実行タスクのみを表示します。'watch' はコンパイルとウォッチ タスクのみを表示します。'on' はビルド タスクとウォッチ タスクの両方を表示します。既定値は 'on' です。",
	"typescript.problemMatchers.tsc.label": "TypeScript の問題",
	"typescript.problemMatchers.tscWatch.label": "TypeScript の問題 (ウォッチ モード)",
	"typescript.quickSuggestionsForPaths": "Import パスを入力するときのクイック候補を有効/無効にします。",
	"typescript.autoImportSuggestions.enabled": "自動 import 提案を有効/無効にします。TypeScript 2.6.1 以上が必要です",
	"typescript.experimental.syntaxFolding": "構文の折りたたみマーカー認識を有効/無効にします。",
	"taskDefinition.tsconfig.description": "TS ビルドを定義する tsconfig ファイル。",
	"javascript.suggestionActions.enabled": "エディター内で JavaScript ファイルの診断の提案を有効または無効にします。TypeScript 2.8 以上である必要があります。",
	"typescript.suggestionActions.enabled": "エディター内で TypeScript ファイルの提案診断を有効/無効にします。TypeScript 2.8 以上が必要です",
	"typescript.showUnused": "コード内で使用されていない変数の強調表示を有効/無効にします。TypeScript 2.9 以上が必要です。",
	"typescript.updateImportsOnFileMove.enabled": "VS Code でファイルの名前変更や移動するときの import パスの自動的な更新を有効/無効にします。有効な値は: 名前変更時に確認をする 'prompt'、常に自動的にパスを更新する 'always'、パスの名前を変更せず確認も行わない 'never' です。TypeScript 2.9 以上が必要です。"
}