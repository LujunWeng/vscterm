{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "Git",
	"description": "Git SCM 통합",
	"command.clone": "복제",
	"command.init": "리포지토리 초기화",
	"command.close": "리포지토리 닫기",
	"command.refresh": "새로 고침",
	"command.openChange": "변경 내용 열기",
	"command.openFile": "파일 열기",
	"command.openHEADFile": "파일 열기(HEAD)",
	"command.stage": "변경 내용 스테이징",
	"command.stageAll": "모든 변경 내용 스테이징",
	"command.stageSelectedRanges": "선택한 범위 스테이징",
	"command.revertSelectedRanges": "선택한 범위 되돌리기",
	"command.stageChange": "변경 내용 스테이징",
	"command.revertChange": "변경 내용 되돌리기",
	"command.unstage": "변경 내용 스테이징 취소",
	"command.unstageAll": "모든 변경 내용 스테이징 취소",
	"command.unstageSelectedRanges": "선택한 범위 스테이징 취소",
	"command.clean": "변경 내용 취소",
	"command.cleanAll": "모든 변경 내용 취소",
	"command.commit": "Commit",
	"command.commitStaged": "스테이징된 항목 커밋",
	"command.commitStagedSigned": "스테이징된 항목 커밋(로그오프됨)",
	"command.commitStagedAmend": "스테이징된 항목 커밋(수정)",
	"command.commitAll": "모두 커밋",
	"command.commitAllSigned": "모두 커밋(로그오프됨)",
	"command.commitAllAmend": "모두 커밋 (수정)",
	"command.undoCommit": "마지막 커밋 실행 취소",
	"command.checkout": "다음으로 체크 아웃...",
	"command.branch": "분기 만들기...",
	"command.deleteBranch": "분기 삭제...",
	"command.renameBranch": "분기 이름 바꾸기...",
	"command.merge": "분기 병합...",
	"command.createTag": "태그 생성",
	"command.fetch": "페치",
	"command.pull": "풀",
	"command.pullRebase": "풀(다시 지정)",
	"command.pullFrom": "가져올 위치...",
	"command.push": "푸시",
	"command.pushTo": "다음으로 푸시...",
	"command.pushWithTags": "태그로 푸시",
	"command.sync": "동기화",
	"command.syncRebase": "동기화(다시 지정)",
	"command.publish": "분기 게시",
	"command.showOutput": "Git 출력 표시",
	"command.ignore": ".gitignore에 파일 추가",
	"command.stashIncludeUntracked": "스태시(미추적 포함)",
	"command.stash": "스태시",
	"command.stashPop": "스태시 표시...",
	"command.stashPopLatest": "최신 슬래시 표시",
	"config.enabled": "Git 사용 여부",
	"config.path": "Git 실행 파일의 경로",
	"config.autoRepositoryDetection": "리포지토리가 자동 감지되어야 하는지 여부",
	"config.autorefresh": "자동 새로 고침 사용 여부",
	"config.autofetch": "자동 가져오기 사용 여부",
	"config.enableLongCommitWarning": "긴 커밋 메시지에 대해 경고할지 여부입니다.",
	"config.confirmSync": "Git 리포지토리를 동기화하기 전에 확인합니다.",
	"config.countBadge": "Git 배지 카운터를 제어합니다. `all`이면 변경 내용을 모두 계산하고, `tracked`이면 추적된 변경 내용만 계산하고, `off`이면 해제합니다.",
	"config.checkoutType": "`다음으로 체크 아웃...`을 실행할 때 나열되는 분기 유형을 제어합니다. `all`이면 모든 참조를 표시하고, `local`이면 로컬 분기만 표시하고, `tags`이면 태그만 표시하고, `remote`이면 원격 분기만 표시합니다.",
	"config.ignoreLegacyWarning": "레거시 Git 경고를 무시합니다.",
	"config.ignoreMissingGitWarning": "Git이 없으면 경고를 무시합니다.",
	"config.ignoreLimitWarning": "리포지토리에 변경 내용이 너무 많으면 경고를 무시합니다.",
	"config.defaultCloneDirectory": "git 리포지토리를 복제할 기본 위치",
	"config.enableSmartCommit": "단계적 변경 사항이 없는 경우 모든 변경 사항을 저장합니다.",
	"config.enableCommitSigning": "GPG를 사용한 커밋 서명을 사용하도록 설정합니다.",
	"config.discardAllScope": "`모든 변경 내용 취소` 명령으로 취소되는 변경 내용을 제어합니다. `all`이면 모든 변경 내용을 취소합니다. `tracked`이면 추적된 파일만 취소합니다. `prompt`이면 작업을 실행할 때마다 프롬프트 대화 상자를 표시합니다.",
	"config.decorations.enabled": "Git에서 색과 배지를 탐색기와 열려 있는 편집기 뷰에 적용하는지 제어합니다.",
	"config.promptToSaveFilesBeforeCommit": "Git가 제출(commit)하기 전에 저장되지 않은 파일을 검사할지를 제어합니다. ",
	"config.showInlineOpenFileAction": "Git 변경점 보기에서 파일 열기 동작 줄을 표시할지의 여부를 제어합니다.",
	"config.inputValidation": "커밋 메시지 입력 유효성 검사를 언제 표시할지 제어합니다.",
	"config.detectSubmodules": "Git 하위 모듈을 자동으로 검색할지 여부를 제어합니다.",
	"config.detectSubmodulesLimit": "Git submodules 검출 개수의 제한을 제어합니다.",
	"colors.modified": "수정된 리소스의 색상입니다.",
	"colors.deleted": "삭제된 리소스의 색상입니다.",
	"colors.untracked": "추적되지 않은 리소스의 색상입니다.",
	"colors.ignored": "무시된 리소스의 색상입니다.",
	"colors.conflict": "충돌이 발생한 리소스의 색상입니다.",
	"colors.submodule": "서브모듈 자원의 색상"
}