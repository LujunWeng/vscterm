{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"editorConfigurationTitle": "Editor",
	"fontFamily": "Controlla la famiglia di caratteri.",
	"fontWeight": "Controlla lo spessore del carattere.",
	"fontSize": "Controlla le dimensioni del carattere in pixel.",
	"lineHeight": "Controlla l'altezza della riga. Usare 0 per calcolare l'altezza della riga dalle dimensioni del carattere.",
	"letterSpacing": "Controlla la spaziatura tra le lettere in pixel.",
	"lineNumbers.off": "I numeri di riga non vengono visualizzati.",
	"lineNumbers.on": "I numeri di riga vengono visualizzati come numeri assoluti.",
	"lineNumbers.relative": "I numeri di riga vengono visualizzati come distanza in linee alla posizione del cursore.",
	"lineNumbers.interval": "I numeri di riga vengono visualizzati ogni 10 righe.",
	"rulers": "Mostra righelli verticali dopo un certo numero di caratteri a spaziatura fissa. Utilizza più valori  per più righelli. Nessun righello viene disegnati se la matrice è vuota",
	"wordSeparators": "Caratteri che verranno usati come separatori di parola quando si eseguono operazioni o spostamenti correlati a parole",
	"tabSize": "Il numero di spazi corrispondenti ad un carattere Tab. Questa impostazione viene sottoposta a override in base al contenuto dei file quando 'editor.detectIndentation' è 'on'.",
	"tabSize.errorMessage": "È previsto 'number'. Nota: il valore \"auto\" è stato sostituito dall'impostazione `editor.detectIndentation`.",
	"insertSpaces": "Inserire spazi quando si preme Tab. Questa impostazione viene sottoposta a override in base al contenuto dei file quando è 'editor.detectIndentation' è 'on'.",
	"insertSpaces.errorMessage": "È previsto 'boolean'. Nota: il valore \"auto\" è stato sostituito dall'impostazione `editor.detectIndentation`.",
	"detectIndentation": "All'apertura di un file, `editor.tabSize` e `editor.insertSpaces` verranno rilevati in base al contenuto del file.",
	"roundedSelection": "Controlla se gli angoli delle selezioni sono arrotondati",
	"scrollBeyondLastLine": "Controlla se l'editor scorrerà oltre l'ultima riga",
	"smoothScrolling": "Controlla se per lo scorrimento dell'editor verrà usata un'animazione.",
	"minimap.enabled": "Controlla se la mini mappa è visualizzata",
	"minimap.side": "Definisce il lato in cui eseguire il rendering della mini mappa.",
	"minimap.showSlider": "Controlla se lo slider della mini mappa viene nascosto automaticamente.",
	"minimap.renderCharacters": "Esegue il rendering dei caratteri effettivi di una riga (in contrapposizione ai blocchi colore)",
	"minimap.maxColumn": "Limita la larghezza della mini mappa in modo da eseguire il rendering al massimo di un certo numero di colonne",
	"find.seedSearchStringFromSelection": "Controlla se inizializzare la stringa di ricerca nel Widget Trova con il testo selezionato nell'editor",
	"find.autoFindInSelection": "Controlla se l'impostazione Trova nella selezione è attivata quando vengono selezionati più caratteri o righe di testo nell'editor",
	"find.globalFindClipboard": "Controlla se il widget Trova debba leggere o modificare gli appunti ricerche condivise su macOS",
	"wordWrap.off": "Il wrapping delle righe non viene eseguito.",
	"wordWrap.on": "Verrà eseguito il wrapping delle righe in base alla larghezza del viewport.",
	"wordWrap.wordWrapColumn": "Verrà eseguito il wrapping delle righe alla posizione corrispondente a `editor.wordWrapColumn`.",
	"wordWrap.bounded": "Verrà eseguito il wrapping delle righe alla posizione minima del viewport e di `editor.wordWrapColumn`.",
	"wordWrap": "Controlla il wrapping delle righe. Valori possibili:\n - 'off' (disabilita il wrapping),\n - 'on' (wrapping del viewport),\n - 'wordWrapColumn' (esegue il wrapping alla posizione corrispondente a `editor.wordWrapColumn`) o\n - 'bounded' (esegue il wrapping alla posizione minima del viewport e di `editor.wordWrapColumn`).",
	"wordWrapColumn": "Controlla la colonna di wrapping dell'editor quando il valore di `editor.wordWrap` è 'wordWrapColumn' o 'bounded'.",
	"mouseWheelScrollSensitivity": "Moltiplicatore da usare sui valori `deltaX` e `deltaY` degli eventi di scorrimento della rotellina del mouse",
	"multiCursorModifier.ctrlCmd": "Rappresenta il tasto 'Control' (ctrl) su Windows e Linux e il tasto 'Comando' (cmd) su OSX.",
	"multiCursorModifier.alt": "Rappresenta il tasto 'Alt' su Windows e Linux e il tasto 'Opzione' su OSX.",
	"multiCursorModifier": "Il modificatore da utilizzare per aggiungere molteplici cursori con il mouse. 'ctrlCmd' rappresenta il tasto 'Control' su Windows e Linux e  il tasto 'Comando' su OSX. I gesti del mouse Vai a definizione e Apri il Link si adatteranno in modo da non entrare in conflitto con il modificatore multi-cursore.",
	"multiCursorMergeOverlapping": "Unire i cursori multipli se sovrapposti.",
	"quickSuggestions.strings": "Abilita i suggerimenti rapidi all'interno di stringhe.",
	"quickSuggestions.comments": "Abilita i suggerimenti rapidi all'interno di commenti.",
	"quickSuggestions.other": "Abilita i suggerimenti rapidi all'esterno di stringhe e commenti.",
	"quickSuggestions": "Controlla se visualizzare automaticamente i suggerimenti durante la digitazione",
	"quickSuggestionsDelay": "Controlla il ritardo in ms dopo il quale verranno visualizzati i suggerimenti rapidi",
	"parameterHints": "Abilita un popup che mostra documentazione sui parametri e informazioni sui tipi mentre si digita",
	"autoClosingBrackets": "Controlla se l'editor deve chiudere automaticamente le parentesi quadre dopo che sono state aperte",
	"formatOnType": "Controlla se l'editor deve formattare automaticamente la riga dopo la digitazione",
	"formatOnPaste": "Controlla se l'editor deve formattare automaticamente il contenuto incollato. Deve essere disponibile un formattatore che deve essere in grado di formattare un intervallo in un documento.",
	"autoIndent": "Controlla se l'editor deve correggere automaticamente l'indentazione mentre l'utente digita, incolla o sposta delle righe. Devono essere disponibili le regole di indentazione del linguaggio.",
	"suggestOnTriggerCharacters": "Controlla se i suggerimenti devono essere visualizzati automaticamente durante la digitazione dei caratteri trigger",
	"acceptSuggestionOnEnter": "Controlla se i suggerimenti devono essere accettati con 'INVIO' in aggiunta a 'TAB'. In questo modo è possibile evitare ambiguità tra l'inserimento di nuove righe e l'accettazione di suggerimenti. Il valore 'smart' indica di accettare un suggerimento con 'INVIO' quando comporta una modifica al testo",
	"acceptSuggestionOnCommitCharacter": "Controlla se accettare i suggerimenti con i caratteri di commit. Ad esempio, in JavaScript il punto e virgola (';') può essere un carattere di commit che accetta un suggerimento e digita tale carattere.",
	"snippetSuggestions.top": "Visualizza i suggerimenti dello snippet sopra gli altri suggerimenti.",
	"snippetSuggestions.bottom": "Visualizza i suggerimenti dello snippet sotto gli altri suggerimenti.",
	"snippetSuggestions.inline": "Visualizza i suggerimenti degli snippet insieme agli altri suggerimenti.",
	"snippetSuggestions.none": "Non mostrare i suggerimenti sugli snippet.",
	"snippetSuggestions": "Controlla se i frammenti di codice sono visualizzati con altri suggerimenti e il modo in cui sono ordinati.",
	"emptySelectionClipboard": "Consente di controllare se, quando si copia senza aver effettuato una selezione, viene copiata la riga corrente.",
	"wordBasedSuggestions": "Controlla se calcolare i completamenti in base alle parole presenti nel documento.",
	"suggestSelection.first": "Consente di selezionare sempre il primo suggerimento.",
	"suggestSelection.recentlyUsed": "Consente di selezionare suggerimenti recenti a meno che continuando a digitare non ne venga selezionato uno, ad esempio `console.| -> console.log` perché `log` è stato completato di recente.",
	"suggestSelection.recentlyUsedByPrefix": "Consente di selezionare i suggerimenti in base a prefissi precedenti che hanno completato tali suggerimenti, ad esempio `co -> console` e `con -> const`.",
	"suggestSelection": "Controlla la modalità di preselezione dei suggerimenti durante la visualizzazione degll'elenco dei suggerimenti.",
	"suggestFontSize": "Dimensioni del carattere per il widget dei suggerimenti",
	"suggestLineHeight": "Altezza della riga per il widget dei suggerimenti",
	"selectionHighlight": "Controlla se l'editor deve evidenziare gli elementi corrispondenti simili alla selezione",
	"occurrencesHighlight": "Controlla se l'editor deve evidenziare le occorrenze di simboli semantici",
	"overviewRulerLanes": "Controlla il numero di effetti che possono essere visualizzati nella stessa posizione nel righello delle annotazioni",
	"overviewRulerBorder": "Controlla se deve essere disegnato un bordo intorno al righello delle annotazioni.",
	"cursorBlinking": "Controllo dello stile di animazione del cursore.",
	"mouseWheelZoom": "Ingrandisce il carattere dell'editor quando si usa la rotellina del mouse e si tiene premuto CTRL",
	"cursorStyle": "Controlla lo stile del cursore. I valori accettati sono 'block', 'block-outline', 'line', 'line-thin', 'underline' e 'underline-thin'",
	"cursorWidth": "Controlla la larghezza del cursore quando editor.cursorSyle è impostato a 'line'",
	"fontLigatures": "Abilita i caratteri legatura",
	"hideCursorInOverviewRuler": "Controlla se il cursore deve essere nascosto nel righello delle annotazioni.",
	"renderWhitespace": "Consente di controllare in che modo l'editor deve eseguire il rendering dei caratteri di spazio vuoto. Le opzioni possibili sono: 'none', 'boundary' e 'all'. Con l'opzione 'boundary' non viene eseguito il rendering di singoli spazi tra le parole.",
	"renderControlCharacters": "Controlla se l'editor deve eseguire il rendering dei caratteri di controllo",
	"renderIndentGuides": "Controlla se l'editor deve eseguire il rendering delle guide con rientro",
	"renderLineHighlight": "Consente di controllare in che modo l'editor deve eseguire il rendering dell'evidenziazione di riga corrente. Le opzioni possibili sono 'none', 'gutter', 'line' e 'all'.",
	"codeLens": "Controlla se nell'editor è visualizzato CodeLens",
	"folding": "Controlla se per l'editor è abilitata la riduzione del codice",
	"foldingStrategyAuto": "Se disponibile, usa una strategia di riduzione specifica del linguaggio, altrimenti esegue il fallback alla strategia di base per i rientri.",
	"foldingStrategyIndentation": "Usa sempre la strategia di riduzione basata sui rientri",
	"foldingStrategy": "Controlla in che modo vengono calcolati gli intervalli di riduzione. Con 'auto' viene usata l'eventuale strategia di riduzione specifica disponibile. Con 'indentation' viene usata forzatamente la strategia di riduzione basata sui rientri.",
	"showFoldingControls": "Controlla se i controlli di riduzione sul margine della barra di scorrimento sono automaticamente nascosti.",
	"matchBrackets": "Evidenzia le parentesi corrispondenti quando se ne seleziona una.",
	"glyphMargin": "Controlla se l'editor deve eseguire il rendering del margine verticale del glifo. Il margine del glifo viene usato principalmente per il debug.",
	"useTabStops": "Inserimento ed eliminazione dello spazio vuoto dopo le tabulazioni",
	"trimAutoWhitespace": "Rimuovi lo spazio vuoto finale inserito automaticamente",
	"stablePeek": "Mantiene aperti gli editor rapidi anche quando si fa doppio clic sul contenuto o si preme ESC.",
	"dragAndDrop": "Controlla se l'editor consentire lo spostamento di selezioni tramite trascinamento della selezione.",
	"accessibilitySupport.auto": "L'editor utilizzerà API della piattaforma per rilevare quando è collegata un'utilità per la lettura dello schermo.",
	"accessibilitySupport.on": "L'editor sarà definitivamente ottimizzato per l'utilizzo con un'utilità per la lettura dello schermo.",
	"accessibilitySupport.off": "L'editor non sarà mai ottimizzato per l'utilizzo con un'utilità per la lettura dello schermo.",
	"accessibilitySupport": "Controlla se l'editor deve essere eseguito in una modalità ottimizzata per le utilità per la lettura dello schermo.",
	"links": "Controlla se l'editor deve individuare i collegamenti e renderli cliccabili",
	"colorDecorators": "Controlla se l'editor deve eseguire il rendering del selettore di colore e degli elementi Decorator di tipo colore inline.",
	"codeActions": "Abilita il codice azione lightbulb",
	"codeActionsOnSave.organizeImports": "Eseguire l'organizzazione degli Imports durante il salvataggio?",
	"codeActionsOnSave": "Tipi di azione codice da eseguire durante il salvataggio.",
	"codeActionsOnSaveTimeout": "Timeout per le azioni codice eseguite durante il salvataggio.",
	"selectionClipboard": "Controlla se gli appunti primari di Linux devono essere supportati.",
	"sideBySide": "Controlla se l'editor diff mostra le differenze affiancate o incorporate",
	"ignoreTrimWhitespace": "Controlla se l'editor diff mostra come differenze le modifiche relative a spazi vuoti iniziali e finali",
	"largeFileOptimizations": "Gestione speciale dei file di grandi dimensioni per disabilitare alcune funzionalità che fanno un uso intensivo della memoria.",
	"renderIndicators": "Consente di controllare se l'editor diff mostra gli indicatori +/- per le modifiche aggiunte/rimosse"
}