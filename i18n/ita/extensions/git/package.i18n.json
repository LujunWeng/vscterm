{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "GIT",
	"description": "Integrazione SCM su Git",
	"command.clone": "Clona",
	"command.init": "Inizializza repository",
	"command.close": "Chiudi repository",
	"command.refresh": "Aggiorna",
	"command.openChange": "Apri modifiche",
	"command.openFile": "Apri file",
	"command.openHEADFile": "Apri File (HEAD)",
	"command.stage": "Prepara modifiche per commit",
	"command.stageAll": "Prepara tutte le modifiche per commit",
	"command.stageSelectedRanges": "Prepara per il commit intervalli selezionati",
	"command.revertSelectedRanges": "Ripristina intervalli selezionati",
	"command.stageChange": "Prepara modifica per commit",
	"command.revertChange": "Annulla modifica",
	"command.unstage": "Annulla preparazione modifiche per commit",
	"command.unstageAll": "Annulla preparazione di tutte le modifiche per commit",
	"command.unstageSelectedRanges": "Annulla preparazione per il commit di intervalli selezionati",
	"command.clean": "Rimuovi modifiche",
	"command.cleanAll": "Rimuovi tutte le modifiche",
	"command.commit": "Commit",
	"command.commitStaged": "Esegui commit dei file preparati",
	"command.commitStagedSigned": "Esegui commit dei file preparati (approvazione)",
	"command.commitStagedAmend": "Esegui commit dei file preparati (modifica)",
	"command.commitAll": "Esegui commit di tutto",
	"command.commitAllSigned": "Esegui commit di tutto (approvazione)",
	"command.commitAllAmend": "Esegui commit di tutto (modifica)",
	"command.undoCommit": "Annulla ultimo commit",
	"command.checkout": "Estrai in...",
	"command.branch": "Crea ramo...",
	"command.deleteBranch": "Elimina ramo...",
	"command.renameBranch": "Rinomina Branch...",
	"command.merge": "Merge ramo...",
	"command.createTag": "Crea tag",
	"command.fetch": "Fetch",
	"command.pull": "Esegui pull",
	"command.pullRebase": "Esegui pull (Riassegna)",
	"command.pullFrom": "Pull da...",
	"command.push": "Esegui push",
	"command.pushTo": "Esegui push in...",
	"command.pushWithTags": "Esegui push con tag",
	"command.sync": "Sincronizza",
	"command.syncRebase": "Sincronizza (Rebase)",
	"command.publish": "Pubblica ramo",
	"command.showOutput": "Mostra output GIT",
	"command.ignore": "Aggiungi file a .gitignore",
	"command.stashIncludeUntracked": "Stash (includi non tracciate)",
	"command.stash": "Accantona",
	"command.stashPop": "Preleva accantonamento...",
	"command.stashPopLatest": "Preleva accantonamento più recente",
	"config.enabled": "Indica se GIT è abilitato",
	"config.path": "Percorso dell'eseguibile di GIT",
	"config.autoRepositoryDetection": "Se i repository devono essere rilevati automaticamente",
	"config.autorefresh": "Indica se l'aggiornamento automatico è abilitato",
	"config.autofetch": "Indica se il recupero automatico è abilitato",
	"config.enableLongCommitWarning": "Indica se visualizzare un avviso in caso di messaggi di commit lunghi",
	"config.confirmSync": "Conferma prima di sincronizzare i repository GIT",
	"config.countBadge": "Controlla il contatore delle notifiche git. Con `all` vengono conteggiate tutte le modifiche. Con `tracked` vengono conteggiate solo le revisioni. Con `off` il contatore è disattivato.",
	"config.checkoutType": "Controlla il tipo di branch mostrati eseguendo il comando `Estrai in...`. `all` mostra tutti i refs, `local` mostra solamente i branch locali, `tags` mostra solamente i tag e `remote` mostra solamente i branch remoti.",
	"config.ignoreLegacyWarning": "Ignora l'avvertimento legacy di Git",
	"config.ignoreMissingGitWarning": "Ignora il messaggio di avviso quando manca Git",
	"config.ignoreLimitWarning": "Ignora il messaggio di avviso quando ci sono troppi cambiamenti in un repository",
	"config.defaultCloneDirectory": "Il percorso predefinito dove clonare un repository GIT",
	"config.enableSmartCommit": "Eseguire il commit di tutte le modifiche quando non ci sono modifiche preparate.",
	"config.enableCommitSigning": "Abilita la firma del commit con GPG.",
	"config.discardAllScope": "Controlla quali modifiche vengono rimosse tramite il comando `Rimuovi tutte le modifiche`. Con `all` vengono rimosse tutte le modifiche. Con `tracked` vengono rimossi solo i file di cui viene tenuta traccia. Con `prompt` viene visualizzata una finestra di dialogo ogni volta che si esegue l'azione.",
	"config.decorations.enabled": "Controlla se Git fornisce colori e distintivi alle visualizzazioni Esplora risorse e Editor aperti.",
	"config.promptToSaveFilesBeforeCommit": "Controlla se GIT deve verificare la presenza di file non salvati prima di eseguire il commit.",
	"config.showInlineOpenFileAction": "Controlla se visualizzare un'azione Apri file inline nella visualizzazione modifiche GIT.",
	"config.inputValidation": "Controlla quando visualizzare la convalida sull'input del messaggio di commit.",
	"config.detectSubmodules": "Controlla se rilevare automaticamente i moduli secondari GIT.",
	"config.detectSubmodulesLimit": "Controlla il limite dei sottomoduli git rilevati.",
	"colors.modified": "Colore delle risorse modificate.",
	"colors.deleted": "Colore delle risorse eliminate.",
	"colors.untracked": "Colore delle risorse non tracciate.",
	"colors.ignored": "Colore delle risorse ignorate.",
	"colors.conflict": "Colore delle risorse con conflitti.",
	"colors.submodule": "Colore delle risorse sottomodulo"
}