{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "Git",
	"description": "Intégration Git SCM",
	"command.clone": "Cloner",
	"command.init": "Initialiser le dépôt",
	"command.close": "Fermer le dépôt",
	"command.refresh": "Actualiser",
	"command.openChange": "Ouvrir les modifications",
	"command.openFile": "Ouvrir le fichier",
	"command.openHEADFile": "Ouvrir le fichier (HEAD)",
	"command.stage": "Mettre en attente les modifications",
	"command.stageAll": "Mettre en attente toutes les modifications",
	"command.stageSelectedRanges": "Mettre en attente les plages sélectionnées",
	"command.revertSelectedRanges": "Restaurer les portées sélectionnées",
	"command.stageChange": "Mettre en attente la modification",
	"command.revertChange": "Restaurer la modification",
	"command.unstage": "Annuler la mise en attente des modifications",
	"command.unstageAll": "Annuler la mise en attente de toutes les modifications",
	"command.unstageSelectedRanges": "Annuler la mise en attente des plages sélectionnées",
	"command.clean": "Ignorer les modifications",
	"command.cleanAll": "Ignorer toutes les modifications",
	"command.commit": "Commit",
	"command.commitStaged": "Valider le contenu en zone de transit",
	"command.commitStagedSigned": "Valider les modifications en attente (signé)",
	"command.commitStagedAmend": "Valider les modifications en attente (modifier)",
	"command.commitAll": "Valider tout",
	"command.commitAllSigned": "Valider tout (signé)",
	"command.commitAllAmend": "Tout Valider (Modifier)",
	"command.undoCommit": "Annuler la dernière validation",
	"command.checkout": "Extraire vers...",
	"command.branch": "Créer une branche...",
	"command.deleteBranch": "Supprimer la branche...",
	"command.renameBranch": "Renommer la branche...",
	"command.merge": "Fusionner la branche...",
	"command.createTag": "Créer une étiquette",
	"command.fetch": "Rappatrier",
	"command.pull": "Pull",
	"command.pullRebase": "Pull (rebaser)",
	"command.pullFrom": "Extraire de...",
	"command.push": "Push",
	"command.pushTo": "Transfert (Push) vers...",
	"command.pushWithTags": "Envoyer avec les Tags",
	"command.sync": "Synchroniser",
	"command.syncRebase": "Synchroniser (Rebase)",
	"command.publish": "Publier la branche",
	"command.showOutput": "Afficher la sortie Git",
	"command.ignore": "Ajouter un fichier à .gitignore",
	"command.stashIncludeUntracked": "Remiser (Inclure les non-tracés)",
	"command.stash": "Remiser (stash)",
	"command.stashPop": "Appliquer et supprimer la remise...",
	"command.stashPopLatest": "Appliquer et supprimer la dernière remise",
	"config.enabled": "Indique si git est activé",
	"config.path": "Chemin d'accès à l'exécutable git",
	"config.autoRepositoryDetection": "Si les dépôts doivent être détectés automatiquement",
	"config.autorefresh": "Indique si l'actualisation automatique est activée",
	"config.autofetch": "Indique si la récupération automatique est activée",
	"config.enableLongCommitWarning": "Indique si les longs messages de validation doivent faire l'objet d'un avertissement",
	"config.confirmSync": "Confirmer avant de synchroniser des dépôts git",
	"config.countBadge": "Contrôle le compteur de badges Git. La valeur 'toutes' compte toutes les modifications. La valeur 'suivies' compte uniquement les modifications suivies. La valeur 'désactivé' désactive le compteur.",
	"config.checkoutType": "Contrôle quel type de branches sont répertoriées pendant l'exécution de 'Extraire vers...'. `all` affiche toutes les références, `local` affiche uniquement les branches locales, `tags` affiche uniquement les balises et la valeur `remote` montre uniquement les branches distantes.",
	"config.ignoreLegacyWarning": "Ignore l'avertissement Git hérité",
	"config.ignoreMissingGitWarning": "Ignore l'avertissement quand Git est manquant",
	"config.ignoreLimitWarning": "Ignore l'avertissement quand il y a trop de modifications dans un dépôt",
	"config.defaultCloneDirectory": "Emplacement par défaut où cloner un dépôt git",
	"config.enableSmartCommit": "Validez toutes les modifications en l'absence de modifications en attente.",
	"config.enableCommitSigning": "Permet de valider en signant avec GPG.",
	"config.discardAllScope": "Contrôle les modifications ignorées par la commande 'Ignorer toutes les modifications'. 'all' ignore toutes les modifications. 'tracked' ignore uniquement les fichiers suivis. 'prompt' affiche un message d'invite chaque fois que l’action est exécutée.",
	"config.decorations.enabled": "Contrôle si Git contribue aux couleurs et aux badges de l’Explorateur et à l'affichage des éditeurs ouverts.",
	"config.promptToSaveFilesBeforeCommit": "Contrôle si Git doit vérifier les fichiers non sauvegardés avant d'effectuer le commit.",
	"config.showInlineOpenFileAction": "Contrôle s’il faut afficher une action Ouvrir le fichier dans l’affichage des modifications de Git.",
	"config.inputValidation": "Contrôle quand afficher la validation de la saisie du message de commit.",
	"config.detectSubmodules": "Contrôle s’il faut détecter automatiquement les sous-modules git.",
	"config.detectSubmodulesLimit": "Contrôle la limite de sous-modules git détectés.",
	"colors.modified": "Couleur pour les ressources modifiées.",
	"colors.deleted": "Couleur pour les ressources supprimées.",
	"colors.untracked": "Couleur pour les ressources non tracées.",
	"colors.ignored": "Couleur des ressources ignorées.",
	"colors.conflict": "Couleur pour les ressources avec des conflits.",
	"colors.submodule": "Couleur pour les ressources de sous-module."
}