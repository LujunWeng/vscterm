{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "Git",
	"description": "Git 源代码管理集成",
	"command.clone": "克隆",
	"command.init": "初始化存储库",
	"command.close": "关闭存储库",
	"command.refresh": "刷新",
	"command.openChange": "打开更改",
	"command.openFile": "打开文件",
	"command.openHEADFile": "打开文件 (HEAD)",
	"command.stage": "暂存更改",
	"command.stageAll": "暂存所有更改",
	"command.stageSelectedRanges": "暂存所选范围",
	"command.revertSelectedRanges": "还原所选更改",
	"command.stageChange": "暂存更改",
	"command.revertChange": "还原更改",
	"command.unstage": "取消暂存更改",
	"command.unstageAll": "取消暂存所有更改",
	"command.unstageSelectedRanges": "取消暂存所选范围",
	"command.clean": "放弃更改",
	"command.cleanAll": "放弃所有更改",
	"command.commit": "提交",
	"command.commitStaged": "提交已暂存文件",
	"command.commitStagedSigned": "提交已暂存文件(已签名)",
	"command.commitStagedAmend": "已暂存提交(修改)",
	"command.commitAll": "全部提交",
	"command.commitAllSigned": "全部提交(已签名)",
	"command.commitAllAmend": "全部提交(修改)",
	"command.undoCommit": "撤消上次提交",
	"command.checkout": "签出到...",
	"command.branch": "创建分支...",
	"command.deleteBranch": "删除分支...",
	"command.renameBranch": "重命名分支...",
	"command.merge": "合并分支...",
	"command.createTag": "创建标签",
	"command.fetch": "抓取",
	"command.pull": "拉取",
	"command.pullRebase": "拉取(变基)",
	"command.pullFrom": "拉取自...",
	"command.push": "推送",
	"command.pushTo": "推送到...",
	"command.pushWithTags": "带标签推送",
	"command.sync": "同步",
	"command.syncRebase": "同步(变基)",
	"command.publish": "发布分支",
	"command.showOutput": "显示 Git 输出",
	"command.ignore": "将文件添加到 .gitignore",
	"command.stashIncludeUntracked": "储藏(包含未跟踪)",
	"command.stash": "储藏",
	"command.stashPop": "弹出储藏...",
	"command.stashPopLatest": "弹出最新储藏",
	"config.enabled": "是否启用 Git",
	"config.path": "Git 可执行文件路径",
	"config.autoRepositoryDetection": "是否自动检测存储库",
	"config.autorefresh": "是否启用自动刷新",
	"config.autofetch": "是否启用自动拉取",
	"config.enableLongCommitWarning": "是否针对长段提交消息进行警告",
	"config.confirmSync": "同步 Git 存储库前进行确认",
	"config.countBadge": "控制 Git 徽章计数器。“all”计算所有更改。“tracked”只计算跟踪的更改。“off”关闭此功能。",
	"config.checkoutType": "控制运行“签出到...”功能时列出的分支类型。\"all\" 显示所有 refs，\"local\" 只显示本地分支，\"tags\" 只显示标签，\"remote\" 只显示远程分支。",
	"config.ignoreLegacyWarning": "忽略“旧版 Git”警告",
	"config.ignoreMissingGitWarning": "忽略“缺失 Git”警告",
	"config.ignoreLimitWarning": "忽略“存储库中存在大量更改”的警告",
	"config.defaultCloneDirectory": "克隆 Git 存储库的默认位置",
	"config.enableSmartCommit": "在没有暂存的更改时提交所有更改。",
	"config.enableCommitSigning": "启用使用 GPG 签名的提交",
	"config.discardAllScope": "控制运行“放弃所有更改”命令时放弃的更改类型。\"all\" 放弃所有更改。\"tracked\" 只放弃跟踪的文件。\"prompt\" 表示在每次运行此操作时显示提示对话框。",
	"config.decorations.enabled": "控制 Git 是否向资源管理器和“打开的编辑器”视图添加颜色和小标。",
	"config.promptToSaveFilesBeforeCommit": "控制 Git 是否在提交之前检查未保存的文件。",
	"config.showInlineOpenFileAction": "控制是否在 Git 更改视图中显示内联“打开文件”操作。",
	"config.inputValidation": "控制何时显示提交消息输入验证。",
	"config.detectSubmodules": "控制是否自动检测 Git 子模块。",
	"config.detectSubmodulesLimit": "控制可检测到的 Git 子模块的限制。",
	"colors.modified": "已修改资源的颜色。",
	"colors.deleted": "已删除资源的颜色。",
	"colors.untracked": "未跟踪资源的颜色。",
	"colors.ignored": "已忽略资源的颜色。",
	"colors.conflict": "存在冲突的资源的颜色。",
	"colors.submodule": "子模块资源的颜色。"
}