{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "GIT",
	"description": "Интеграция SCM в Git",
	"command.clone": "Клонировать",
	"command.init": "Инициализировать репозиторий",
	"command.close": "Закрыть репозиторий",
	"command.refresh": "Обновить",
	"command.openChange": "Открыть изменения",
	"command.openFile": "Открыть файл",
	"command.openHEADFile": "Открыть файл (заголовок)",
	"command.stage": "Хранить промежуточные изменения",
	"command.stageAll": "Хранить все промежуточные изменения",
	"command.stageSelectedRanges": "Разместить выбранные диапазоны",
	"command.revertSelectedRanges": "Отменить выбранные диапазоны",
	"command.stageChange": "Сохранить изменение",
	"command.revertChange": "Отменить изменение",
	"command.unstage": "Отменить хранение промежуточных изменений",
	"command.unstageAll": "Отменить хранение всех промежуточных изменений",
	"command.unstageSelectedRanges": "Отменить размещение выбранных диапазонов",
	"command.clean": "Отменить изменения",
	"command.cleanAll": "Отменить все изменения",
	"command.commit": "Commit",
	"command.commitStaged": "Зафиксировать промежуточно сохраненные изменения",
	"command.commitStagedSigned": "Зафиксировать промежуточные элементы (завершено)",
	"command.commitStagedAmend": "Зафиксировать промежуточные (изменение)",
	"command.commitAll": "Зафиксировать все",
	"command.commitAllSigned": "Зафиксировать все (завершено)",
	"command.commitAllAmend": "Зафиксировать все (изменение)",
	"command.undoCommit": "Отменить последнюю фиксацию",
	"command.checkout": "Извлечь в...",
	"command.branch": "Создать ветвь...",
	"command.deleteBranch": "Удалить ветвь...",
	"command.renameBranch": "Переименовать ветвь...",
	"command.merge": "Объединить ветвь...",
	"command.createTag": "Создать тег",
	"command.fetch": "Получить",
	"command.pull": "Получить",
	"command.pullRebase": "Получить (переместить изменения из одной ветви в другую)",
	"command.pullFrom": "Загрузить с...",
	"command.push": "Отправить",
	"command.pushTo": "Отправить в:",
	"command.pushWithTags": "Отправить с тегами",
	"command.sync": "Синхронизация",
	"command.syncRebase": "Синхронизация (перемещение изменений из одной ветви в другую)",
	"command.publish": "Опубликовать ветвь",
	"command.showOutput": "Показать выходные данные GIT",
	"command.ignore": "Добавить файл в .gitignore",
	"command.stashIncludeUntracked": "Спрятать (включить неотслеживаемые)",
	"command.stash": "Спрятать",
	"command.stashPop": "Извлечь спрятанное",
	"command.stashPopLatest": "Извлечь последнее спрятанное",
	"config.enabled": "Включен ли GIT",
	"config.path": "Путь к исполняемому файлу GIT",
	"config.autoRepositoryDetection": "Следует ли обнаруживать репозитории автоматически",
	"config.autorefresh": "Включено ли автоматическое обновление",
	"config.autofetch": "Включено ли автоматическое получение",
	"config.enableLongCommitWarning": "Следует ли предупреждать о длинных сообщениях о фиксации",
	"config.confirmSync": "Подтвердите синхронизацию репозиториев GIT.",
	"config.countBadge": "\nУправляет счетчиком Git. При указании значения \"all\" подсчитываются все изменения, при указании значения \"tracked\" — только отслеживаемые изменения, при указании значения \"off\" счетчик отключается.",
	"config.checkoutType": "Определяет типы ветвей, которые выводятся при выборе пункта меню \"Извлечь в...\". При указании значения \"all\" отображаются все ссылки, \"local\" — только локальные ветви, \"tags\" — только теги, а \"remote\" — только удаленные ветви.",
	"config.ignoreLegacyWarning": "Игнорирует предупреждение об устаревшей версии Git",
	"config.ignoreMissingGitWarning": "Игнорирует предупреждение об отсутствии Git",
	"config.ignoreLimitWarning": "Игнорировать предупреждение, когда в репозитории слишком много изменений",
	"config.defaultCloneDirectory": "Расположение по умолчанию, в которое будет клонирован репозиторий Git",
	"config.enableSmartCommit": "Зафиксировать все изменения при отсутствии промежуточных изменений.",
	"config.enableCommitSigning": "Включает подписывание фиксации с GPG.",
	"config.discardAllScope": "Определяет, какие изменения отменяются с помощью команды \"Отменить все изменения\". При указании значения \"all\" отменяются все изменения, при указании значения \"tracked\" отменяются изменения только в отслеживаемых файлах, при указании значения \"prompt\" отображается окно подтверждения каждый раз при выполнении действия.",
	"config.decorations.enabled": "Управляет тем, используются ли цвета и эмблемы Git в проводнике и открытых представлениях редактора.",
	"config.promptToSaveFilesBeforeCommit": "Определяет, должен ли Git проверять несохраненные файлы перед фиксацией.",
	"config.showInlineOpenFileAction": "Определяет, должно ли отображаться интерактивное действие \"Открыть файл\" в представлении \"Изменения Git\".",
	"config.inputValidation": "Определяет, следует ли проверять введенные данные в сообщении фиксации.",
	"config.detectSubmodules": "Определяет, следует ли автоматически определять подмодули Git.",
	"config.detectSubmodulesLimit": "Управляет ограничением на количество обнаруженных подмодулей Git.",
	"colors.modified": "Цвет измененных ресурсов.",
	"colors.deleted": "Цвет удаленных ресурсов.",
	"colors.untracked": "Цвет неотслеживаемых ресурсов.",
	"colors.ignored": "Цвет игнорируемых ресурсов.",
	"colors.conflict": "Цвет ресурсов с конфликтами.",
	"colors.submodule": "Цвет ресурсов подмодуля."
}