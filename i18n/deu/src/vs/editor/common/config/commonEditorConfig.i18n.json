{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"editorConfigurationTitle": "Editor",
	"fontFamily": "Steuert die Schriftfamilie.",
	"fontWeight": "Steuert die Schriftbreite.",
	"fontSize": "Steuert den Schriftgrad in Pixeln.",
	"lineHeight": "Steuert die Zeilenhöhe. Verwenden Sie 0, um LineHeight aus der FontSize-Angabe zu berechnen.",
	"letterSpacing": "Steuert den Zeichenabstand in Pixeln.",
	"lineNumbers.off": "Zeilennummern werden nicht dargestellt.",
	"lineNumbers.on": "Zeilennummern werden als absolute Zahl dargestellt.",
	"lineNumbers.relative": "Zeilennummern werden als Abstand in Zeilen an Cursorposition dargestellt.",
	"lineNumbers.interval": "Zeilennummern werden alle 10 Zeilen dargestellt.",
	"rulers": "Vertikale Linien nach einer bestimmten Anzahl von Monospace Zeichen zeichnen. Verwenden Sie mehrere Werte für mehrere Linien. Keine Linie wird gezeichnet, wenn das Array leer ist.",
	"wordSeparators": "Zeichen, die als Worttrennzeichen verwendet werden, wenn wortbezogene Navigationen oder Vorgänge ausgeführt werden.",
	"tabSize": "Die Anzahl der Leerzeichen, denen ein Tabstopp entspricht. Diese Einstellung wird basierend auf dem Inhalt der Datei überschrieben, wenn \"editor.detectIndentation\" aktiviert ist.",
	"tabSize.errorMessage": "\"number\" wurde erwartet. Beachten Sie, dass der Wert \"auto\" durch die Einstellung \"editor.detectIndentation\" ersetzt wurde.",
	"insertSpaces": "Fügt beim Drücken der TAB-TASTE Leerzeichen ein. Diese Einstellung wird basierend auf dem Inhalt der Datei überschrieben, wenn \"editor.detectIndentation\" aktiviert ist.",
	"insertSpaces.errorMessage": "\"boolean\" wurde erwartet. Beachten Sie, dass der Wert \"auto\" durch die Einstellung \"editor.detectIndentation\" ersetzt wurde.",
	"detectIndentation": "Beim Öffnen einer Datei werden \"editor.tabSize\" und \"editor.insertSpaces\" basierend auf den Dateiinhalten erkannt.",
	"roundedSelection": "Steuert, ob die Auswahl runde Ecken aufweist.",
	"scrollBeyondLastLine": "Legt fest, ob der Editor Bildläufe über die letzte Zeile hinaus ausführt.",
	"smoothScrolling": "Legt fest, ob der Editor Bildläufe animiert ausführt.",
	"minimap.enabled": "Steuert, ob die Minikarte angezeigt wird",
	"minimap.side": "Steuert die Seite, wo die Minikarte gerendert wird.",
	"minimap.showSlider": "Steuert, ob der Minimap-Schieberegler automatisch ausgeblendet wird.",
	"minimap.renderCharacters": "Die tatsächlichen Zeichen in einer Zeile rendern (im Gegensatz zu Farbblöcken)",
	"minimap.maxColumn": "Breite der Minikarte beschränken, um höchstens eine bestimmte Anzahl von Spalten zu rendern",
	"find.seedSearchStringFromSelection": "Steuert, ob wir für die Suchzeichenfolge im Suchwidget aus der Editorauswahl ein Seeding ausführen.",
	"find.autoFindInSelection": "Steuert, ob die Kennzeichnung \"In Auswahl suchen\" aktiviert ist, wenn mehrere Zeichen oder Textzeilen im Editor ausgewählt wurden.",
	"find.globalFindClipboard": "Steuert, ob das Widget Suchen lesen oder die gemeinsame Such-Zwischenablage im MacOS ändern soll.",
	"wordWrap.off": "Zeilenumbrüche erfolgen nie.",
	"wordWrap.on": "Der Zeilenumbruch erfolgt an der Breite des Anzeigebereichs.",
	"wordWrap.wordWrapColumn": "Der Zeilenbereich erfolgt bei \"editor.wordWrapColumn\".",
	"wordWrap.bounded": "Der Zeilenumbruch erfolgt beim Mindestanzeigebereich und \"editor.wordWrapColumn\".",
	"wordWrap": "Steuert den Zeilenumbruch. Mögliche Einstellungen sind:\n - \"off\" (Umbruch deaktivieren),\n - \"on\" (Anzeigebereichsumbruch),\n - \"wordWrapColumn\" (Umbruch bei \"editor.wordWrapColumn\") oder\n - \"bounded\" (der Zeilenumbruch erfolgt beim Mindestanzeigebereich und \"editor.wordWrapColumn\").",
	"wordWrapColumn": "Steuert die Umbruchspalte des Editors, wenn für \"editor.wordWrap\" die Option \"wordWrapColumn\" oder \"bounded\" festgelegt ist.",
	"mouseWheelScrollSensitivity": "Ein Multiplikator, der für die Mausrad-Bildlaufereignisse \"deltaX\" und \"deltaY\" verwendet werden soll.",
	"multiCursorModifier.ctrlCmd": "Ist unter Windows und Linux der Taste \"STRG\" und unter macOSX der Befehlstaste zugeordnet.",
	"multiCursorModifier.alt": "Ist unter Windows und Linux der Taste \"Alt\" und unter macOSX der Wahltaste zugeordnet. ",
	"multiCursorModifier": "Der Modifizierer, der zum Hinzufügen mehrerer Cursor mit der Maus verwendet wird. \"ctrlCmd\" wird unter Windows und Linux der Taste \"STRG\" und unter macOSX der Befehlstaste zugeordnet. Die Mausbewegungen \"Gehe zu Definition\" und \"Link öffnen\" werden so angepasst, dass kein Konflikt mit dem Multi-Cursor-Modifizierer entsteht.",
	"multiCursorMergeOverlapping": "Mehrere Cursor zusammenführen, wenn sie sich überlappen.",
	"quickSuggestions.strings": "Schnellvorschläge innerhalb von Zeichenfolgen aktivieren.",
	"quickSuggestions.comments": "Schnellvorschläge innerhalb von Kommentaren aktivieren.",
	"quickSuggestions.other": "Schnellvorschläge außerhalb von Zeichenfolgen und Kommentaren aktivieren.",
	"quickSuggestions": "Steuert, ob Vorschläge während der Eingabe automatisch angezeigt werden sollen.",
	"quickSuggestionsDelay": "Steuert die Verzögerung in ms für die Anzeige der Schnellvorschläge.",
	"parameterHints": "Aktiviert ein Pop-Up, das Parameter-Dokumentation und Typ-Information während des Tippens anzeigt",
	"autoClosingBrackets": "Steuert, ob der Editor Klammern automatisch nach dem Öffnen schließt.",
	"formatOnType": "Steuert, ob der Editor Zeilen automatisch nach der Eingabe formatiert.",
	"formatOnPaste": "Steuert, ob der Editor den eingefügten Inhalt automatisch formatiert.",
	"autoIndent": "Steuert, ob der Editor die Einzüge automatisch anpasst, wenn Benutzer Text eingeben oder Zeilen einfügen oder verschieben. Einzugsregeln der Sprache müssen verfügbar sein. ",
	"suggestOnTriggerCharacters": "Steuert, ob Vorschläge automatisch bei der Eingabe von Triggerzeichen angezeigt werden.",
	"acceptSuggestionOnEnter": "Steuert, ob Vorschläge über die Eingabetaste (zusätzlich zur TAB-Taste) angenommen werden sollen. Vermeidet Mehrdeutigkeit zwischen dem Einfügen neuer Zeilen oder dem Annehmen von Vorschlägen. Der Wert \"smart\" bedeutet, dass ein Vorschlag nur über die Eingabetaste akzeptiert wird, wenn eine Textänderung vorgenommen wird.",
	"acceptSuggestionOnCommitCharacter": "Steuert, ob Vorschläge über Commitzeichen angenommen werden sollen. In JavaScript kann ein Semikolon (\";\") beispielsweise ein Commitzeichen sein, das einen Vorschlag annimmt und dieses Zeichen eingibt.",
	"snippetSuggestions.top": "Zeige Snippet Vorschläge über den anderen Vorschlägen.",
	"snippetSuggestions.bottom": "Snippet Vorschläge unter anderen Vorschlägen anzeigen.",
	"snippetSuggestions.inline": "Zeige Snippet Vorschläge mit anderen Vorschlägen.",
	"snippetSuggestions.none": "Snippet Vorschläge nicht anzeigen.",
	"snippetSuggestions": "Steuert, ob Codeausschnitte mit anderen Vorschlägen angezeigt und wie diese sortiert werden.",
	"emptySelectionClipboard": "Steuert, ob ein Kopiervorgang ohne Auswahl die aktuelle Zeile kopiert.",
	"wordBasedSuggestions": "Steuert, ob Vervollständigungen auf Grundlage der Wörter im Dokument berechnet werden sollen.",
	"suggestSelection.first": "Immer den ersten Vorschlag auswählen.",
	"suggestSelection.recentlyUsed": "Zuletzt verwendete Vorschläge auswählen, sofern keiner durch eine weitere Eingabe ausgewählt wird. Beispiel: \"console.l\" -> \"console.log\", da \"log\" vor Kurzem vervollständigt wurde.",
	"suggestSelection.recentlyUsedByPrefix": "Vorschläge auf Grundlage vorheriger Präfixe auswählen, die diese Vorschläge vervollständigt haben. Beispiel: \"co\" -> \"console\" und \"con\" -> \"const\".",
	"suggestSelection": "Steuert, wie Vorschläge bei Anzeige der Vorschlagsliste vorab ausgewählt werden.",
	"suggestFontSize": "Schriftgröße für Vorschlagswidget",
	"suggestLineHeight": "Zeilenhöhe für Vorschlagswidget",
	"selectionHighlight": "Steuert, ob der Editor der Auswahl ähnelnde Übereinstimmungen hervorheben soll.",
	"occurrencesHighlight": "Steuert, ob der Editor das Vorkommen semantischer Symbole markieren soll.",
	"overviewRulerLanes": "Steuert die Anzahl von Dekorationen, die an derselben Position im Übersichtslineal angezeigt werden.",
	"overviewRulerBorder": "Steuert, ob um das Übersichtslineal ein Rahmen gezeichnet werden soll.",
	"cursorBlinking": "Steuert den Cursoranimationsstil.",
	"mouseWheelZoom": "Schriftart des Editors vergrößern, wenn das Mausrad verwendet und die STRG-TASTE gedrückt wird",
	"cursorStyle": "Steuert den Cursorstil. Gültige Werte sind  \"block\", \"block-outline\", \"line\", \"line-thin\", \"underline\" und \"underline-thin\".",
	"cursorWidth": "Steuert die Breite des Cursors, falls editor.cursorStyle auf \"line\" gestellt ist.",
	"fontLigatures": "Aktiviert Schriftartligaturen.",
	"hideCursorInOverviewRuler": "Steuert die Sichtbarkeit des Cursors im Übersichtslineal.",
	"renderWhitespace": "Steuert, wie der Editor Leerzeichen rendert. Mögliche Optionen: \"none\", \"boundary\" und \"all\". Die Option \"boundary\" rendert keine einzelnen Leerzeichen zwischen Wörtern.",
	"renderControlCharacters": "Steuert, ob der Editor Steuerzeichen rendern soll.",
	"renderIndentGuides": "Steuert, ob der Editor Einzugsführungslinien rendern soll.",
	"renderLineHighlight": "Steuert, wie der Editor die aktuelle Zeilenhervorhebung rendern soll. Mögliche Werte sind \"none\", \"gutter\", \"line\" und \"all\".",
	"codeLens": "Steuert, ob der Editor CodeLens anzeigt.",
	"folding": "Steuert, ob für den Editor Codefaltung aktiviert ist.",
	"foldingStrategyAuto": "Falls vorhanden, eine sprachspezifische Strategie für das Codefaltung verwenden, ansonsten wird die einrückungsbasierte Strategie genutzt.",
	"foldingStrategyIndentation": "Immer die einrückungsbasierte Strategie zur Codefaltung nutzen",
	"foldingStrategy": "Steuert die Art und Weise, wie Faltungsbereiche berechnet werden. \"auto\" verwendet eine sprachspezifische Strategie für die Codefaltung, sofern verfügbar. \"indentation\" erzwingt eine einrückungsbasierte Strategie zur Codefaltung.",
	"showFoldingControls": "Steuert, ob die Falt-Steuerelemente an der Leiste automatisch ausgeblendet werden.",
	"matchBrackets": "Übereinstimmende Klammern hervorheben, wenn eine davon ausgewählt wird.",
	"glyphMargin": "Steuert, ob der Editor den vertikalen Glyphenrand rendert. Der Glyphenrand wird hauptsächlich zum Debuggen verwendet.",
	"useTabStops": "Das Einfügen und Löschen von Leerzeichen folgt auf Tabstopps.",
	"trimAutoWhitespace": "Nachfolgendes automatisch eingefügtes Leerzeichen entfernen",
	"stablePeek": "Peek-Editoren geöffnet lassen, auch wenn auf ihren Inhalt doppelgeklickt oder die ESC-TASTE gedrückt wird.",
	"dragAndDrop": "Steuert, ob der Editor das Verschieben einer Auswahl per Drag and Drop zulässt.",
	"accessibilitySupport.auto": "Der Editor verwendet Plattform-APIs, um zu erkennen, wenn eine Sprachausgabe angefügt wird.",
	"accessibilitySupport.on": "Der Editor wird durchgehend für die Verwendung mit einer Sprachausgabe optimiert.",
	"accessibilitySupport.off": "Der Editor wird nie für die Verwendung mit einer Sprachausgabe optimiert. ",
	"accessibilitySupport": "Steuert, ob der Editor in einem Modus ausgeführt werden soll, in dem er für die Sprachausgabe optimiert wird.",
	"links": "Steuert, ob der Editor Links erkennen und anklickbar machen soll",
	"colorDecorators": "Steuert, ob der Editor die Inline-Farbdecorators und die Farbauswahl rendern soll.",
	"codeActions": "Ermöglicht die Code-Aktion \"lightbulb\"",
	"codeActionsOnSave.organizeImports": "Ein Organisieren der Importe beim Speichern ausführen?",
	"codeActionsOnSave": "Arten von Codeaktionen, die beim Speichern ausgeführt werden sollen.",
	"codeActionsOnSaveTimeout": "Timeout für Codeaktionen, die beim Speichern ausgeführt werden.",
	"selectionClipboard": "Steuert, ob die primäre Linux-Zwischenablage unterstützt werden soll.",
	"sideBySide": "Steuert, ob der Diff-Editor das Diff nebeneinander oder inline anzeigt.",
	"ignoreTrimWhitespace": "Steuert, ob der Diff-Editor Änderungen in führenden oder nachgestellten Leerzeichen als Diffs anzeigt.",
	"largeFileOptimizations": "Spezielle Behandlung für große Dateien zum Deaktivieren bestimmter speicherintensiver Funktionen.",
	"renderIndicators": "Steuert, ob der Diff-Editor die Indikatoren \"+\" und \"-\" für hinzugefügte/entfernte Änderungen anzeigt."
}