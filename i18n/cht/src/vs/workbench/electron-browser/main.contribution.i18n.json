{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"view": "檢視",
	"help": "說明",
	"file": "檔案",
	"workspaces": "工作區",
	"developer": "開發人員",
	"workbenchConfigurationTitle": "工作台",
	"showEditorTabs": "控制已開啟的編輯器是否應顯示在索引標籤中。",
	"workbench.editor.labelFormat.default": "顯示檔案名稱。當啟用索引標籤，且同一個群組中有兩個檔案同名時，就會新增各個檔案路徑具有識別度的的區段。當停用索引標籤時，若編輯器在使用中，就會顯示與工作區資料夾相關的路徑。",
	"workbench.editor.labelFormat.short": "顯示檔案的名稱，並在名稱後接著該檔案的目錄名稱。",
	"workbench.editor.labelFormat.medium": "顯示檔案的名稱，並在名稱後接著該檔案與工作區資料夾的相對路徑。",
	"workbench.editor.labelFormat.long": "顯示檔案的名稱，並在名稱後接著該檔案的絕對路徑。",
	"tabDescription": "控制編輯器的標籤格式。變更此設定具有多項優點，例如可讓檔案的位置更加清楚:\n-簡短: 'parent'\n-中等: 'workspace/src/parent'\n-完整: '/home/user/workspace/src/parent'\n-預設: '.../parent'，當另一個索引標籤共用相同的標題，或若路徑停用，卻共用相關的工作區路徑時",
	"editorTabCloseButton": "控制編輯器的索引標籤關閉按鈕位置，或在設為 'off' 時將其停用。",
	"tabSizing": "控制編輯器索引標籤的大小調整。設定為 \"最適大小\" 可讓索引標籤永遠保持足夠空間來顯示完整的編輯器標籤。設定為 \"縮小\" 可在可用空間不足以同時顯示所有索引標籤時，縮小索引標籤。",
	"showIcons": "控制開啟的編輯器是否搭配圖示顯示。這需要同時啟用圖示佈景主題。",
	"enablePreview": "控制已開啟的編輯器是否顯示為預覽。預覽編輯器會重複使用到被保留 (例如按兩下或進行編輯) 並以斜體字型樣式顯示為止。",
	"enablePreviewFromQuickOpen": "控制透過 Quick Open 所開啟的編輯器是否顯示為預覽。預覽編輯器會重複使用到被保留 (例如按兩下或進行編輯) 為止。",
	"closeOnFileDelete": "控制顯示檔案的編輯器是否應在其他處理序刪除或重新命名該檔案時自動關閉。若停用此選項，當發生前述狀況時，編輯器會保持開啟，並呈現已變更的狀態。請注意，從應用程式內刪除一律會關閉編輯器，但已變更的檔案在資料未儲存前一律不會關閉。",
	"editorOpenPositioning": "控制編輯器的開啟位置。選取 [左] 或 [右] 可在目前使用中的編輯器左方或右方加以開啟。選取 [第一個] 或 [最後一個] 則可從目前使用中的編輯器另外加以開啟。",
	"revealIfOpen": "控制編輯器是否要在任何顯示的群組開啟時，在其中顯示。若啟用此選項，已經開啟的編輯器將會繼續顯示，而不會在目前使用中的編輯器群組中再開啟一次。請注意，有一些情況會忽略此設定，例如當強制編輯器在特定群組中開啟，或強制編輯器在目前使用中的群組旁開啟等情況。",
	"swipeToNavigate": "利用三指水平撥動在開啟的檔案間瀏覽。",
	"commandHistory": "控制最近使用之命令的數量，以保留命令選擇區的記錄。設為 0 可停用命令列記錄。",
	"preserveInput": "控制下次開啟命令選擇區時，最後鍵入的輸入是否應該還原。",
	"closeOnFocusLost": "控制是否在 Quick Open 失去焦點時自動關閉。",
	"openDefaultSettings": "控制開啟設定時是否也會開啟顯示所有預設設定的編輯器。",
	"sideBarLocation": "控制項資訊看板的位置。可顯示於 Workbench 的左方或右方。",
	"panelDefaultLocation": "控制面板的預設位置。可顯示在 Workbench 的底部或是右方。",
	"statusBarVisibility": "控制 Workbench 底端狀態列的可視性。",
	"activityBarVisibility": "控制活動列在 workbench 中的可見度。",
	"viewVisibility": "控制檢視標頭動作的可見度。檢視標頭動作可為總是可見，或在檢視為焦點或暫留時才可見。",
	"fontAliasing": "控制工作台中的字型鋸齒化方法。\n- default: 子像素字型平滑化。在多數非 Retina 的顯示器上，這會使文字變得最鮮明\n- antialiased: 在像素層級上使字型平滑化，與子像素相對。能夠使字型整體顯示較亮\n- none: 停用字型平滑化。顯示的文字會帶有鋸齒狀銳利邊緣\n- auto: 根據顯示器的 DPI 自動套用 `default` 或 `antialiased`。",
	"workbench.fontAliasing.default": "子像素字型平滑處理。在大部分非 Retina 顯示器上會顯示出最銳利的文字。",
	"workbench.fontAliasing.antialiased": "相對於子像素，根據像素層級平滑字型。可以讓字型整體顯得較細。",
	"workbench.fontAliasing.none": "禁用字體平滑.文字將會顯示鋸齒狀與鋒利的邊緣.",
	"workbench.fontAliasing.auto": "根據顯示器的 DPI 自動套用 `default` 或 `antialiased`。",
	"enableNaturalLanguageSettingsSearch": "控制是否啟用自然語言搜尋模式。",
	"windowConfigurationTitle": "視窗",
	"window.openFilesInNewWindow.on": "檔案會在新視窗中開啟",
	"window.openFilesInNewWindow.off": "檔案會在開啟了檔案資料夾的視窗，或在上一個使用中的視窗中開啟",
	"window.openFilesInNewWindow.defaultMac": "除非從擴充座或 Finder 中開啟，否則檔案會在開啟了檔案資料夾的視窗，或在上一個使用中的視窗中開啟",
	"window.openFilesInNewWindow.default": "除非已從應用程式內挑選 (例如透過 [檔案] 功能表)，否則檔案會在新視窗中開啟",
	"openFilesInNewWindowMac": "控制檔案是否應在新視窗中開啟。\n- default: 檔案會在視窗中隨檔案的資料夾開啟或在上一個使用中視窗開啟，除非透過擴充座或從尋找工具開啟\n- on: 檔案會在新視窗開啟\n- off: 檔案會在視窗中隨檔案的資料夾開啟或在上一個使用中視窗開啟\n請注意，在某些情況下會略過此設定 (例如，使用了 -new-window 或 -reuse-window 命令列選項時)。",
	"openFilesInNewWindow": "控制是否在新視窗中打開檔案。\n- default: 檔案會在新視窗中開啟，除非從應用程式中選擇 (例如透過 \"檔案\" 功能表)\n- on: 檔案會在新視窗中開啟\n- off: 檔案會在視窗中隨檔案的資料夾開啟或在上一個使用中視窗開啟\n請注意，在某些情況下會略過此設定 (例如，使用 the -new-window 或 -reuse-window 命令列選項時)。",
	"window.openFoldersInNewWindow.on": "資料夾會在新視窗中開啟",
	"window.openFoldersInNewWindow.off": "資料夾會取代上一個使用中的視窗",
	"window.openFoldersInNewWindow.default": "除非已從應用程式內挑選了資料夾 (例如透過 [檔案] 功能表)，否則資料夾會在新視窗中開啟",
	"openFoldersInNewWindow": "控制資料夾應在新視窗中開啟或取代上一個使用中的視窗。\n- default: 除非已從應用程式內挑選資料夾 (例如，透過 [檔案] 功能表)，否則會在新視窗開啟\n- on: 資料夾會在新視窗開啟\n- off: 資料夾會取代上一個使用中視窗\n請注意，在某些情況下會略過此設定 (例如，使用了 -new-window 或 -reuse-window 命令列選項時)。",
	"window.openWithoutArgumentsInNewWindow.on": "開啟新空白視窗",
	"window.openWithoutArgumentsInNewWindow.off": "聚焦在上一個正在運行的執行個體",
	"openWithoutArgumentsInNewWindow": "控制不以引數啟動第二個執行個體時是否要開啟新的空白視窗，或是應聚焦於上一個執行的執行個體。\n- on: 開啟新的空白視窗\n- off: 上一個使用中的執行中執行個體將會受到聚焦\n請注意：仍可能發生忽略此設定的情形 (例如，在使用 -new-window 或 -reuse-window 命令列選項時)。",
	"window.reopenFolders.all": "重新開啟所有視窗。",
	"window.reopenFolders.folders": "重新開啟所有資料夾。空白工作區將不會還原。",
	"window.reopenFolders.one": "重新開啟上一個使用中的視窗。",
	"window.reopenFolders.none": "一律不重新開啟視窗。永遠從空白的視窗開始。",
	"restoreWindows": "控制重新啟動後視窗重新開啟的方式。選取 [無] 一律以空白工作區開始、選取 [一] 從上一個編輯的視窗重新開啟、選取 [資料夾] 重新開啟所有資料夾曾經開啟的視窗，或選取 [全部] 重新開啟上一個工作階段的所有視窗。",
	"restoreFullscreen": "控制當視窗在全螢幕模式下結束後，下次是否仍以全螢幕模式開啟。",
	"zoomLevel": "調整視窗的縮放比例。原始大小為 0，而且每個向上增量 (例如 1) 或向下增量 (例如 -1) 代表放大或縮小 20%。您也可以輸入小數，更細微地調整縮放比例。",
	"title": "依據使用中的編輯器控制視窗標題。變數會依據內容替換:\n${activeEditorShort}: 檔案名稱 (例如 myFile.txt)\n${activeEditorMedium}: 與工作區資料夾相關的檔案路徑 (例如 myFolder/myFile.txt)\n${activeEditorLong}: 完整的檔案路徑 (例如 /Users/Development/myProject/myFolder/myFile.txt)\n${folderName}: 包含著資料夾之工作區資料夾的名稱 (例如 myFolder)\n${folderPath}: 包含著資料夾之工作區資料夾的檔案路徑 (例如 /Users/Development/myFolder)\n${rootName}: 工作區的名稱 (例如 myFolder 或 myWorkspace)\n${rootPath}: 工作區的檔案路徑 (例如 /Users/Development/myWorkspace)\n${appName}: 例如 VS Code\n${dirty}: 已變更指示 (若使用中編輯器已變更)\n${separator}: 僅在受具有值或靜態文字之變數括住時才顯示的條件式分隔符號 (\" - \")",
	"window.newWindowDimensions.default": "在螢幕中央開啟新視窗。",
	"window.newWindowDimensions.inherit": "以相同於上一個使用中之視窗的維度開啟新視窗。",
	"window.newWindowDimensions.maximized": "開啟並最大化新視窗。",
	"window.newWindowDimensions.fullscreen": "在全螢幕模式下開啟新視窗。",
	"newWindowDimensions": "控制當至少一個視窗已打開的情況下開啟新視窗的維度。根據預設，新視窗會以小型維度在畫面中央開啟。設為 'inherit' 時，視窗的維度會和最後開啟的視窗相同。設為 'maximized' 時，視窗會開到最大，若設為 'fullscreen' 則全螢幕開啟。",
	"closeWhenEmpty": "控制在關閉最後一個編輯器時，是否也應關閉視窗。此設定僅適用於未顯示資料夾的視窗。",
	"window.menuBarVisibility.default": "只在全螢幕模式時隱藏功能表。",
	"window.menuBarVisibility.visible": "一律顯示功能表，即使在全螢幕模式時亦然。",
	"window.menuBarVisibility.toggle": "隱藏功能表，但可經由 Alt 鍵加以顯示。",
	"window.menuBarVisibility.hidden": "一律隱藏功能表。",
	"menuBarVisibility": "控制功能表列的可見度。[切換] 設定表示會隱藏功能表列，按一下 Alt 鍵則會顯示。除非視窗是全螢幕，否則預設會顯示功能表列。",
	"enableMenuBarMnemonics": "啟用後可以利用Alt快捷鍵打開主選單.關閉記憶選單將Alt快捷鍵綁定至替代的命令區塊.",
	"autoDetectHighContrast": "若啟用，如果 Windows 使用高對比佈景主題，就會自動變更為高對比佈景主題，切換掉 Windows 高對比佈景主題時則變更為深色佈景主題。",
	"titleBarStyle": "調整視窗標題列的外觀。變更需要完整重新啟動才會套用。",
	"window.nativeTabs": "啟用 macOS Sierra 視窗索引標籤。請注意需要完全重新啟動才能套用變更，並且完成設定後原始索引標籤將會停用自訂標題列樣式。",
	"window.smoothScrollingWorkaround": "在還原最小化的 VS Code 視窗後，若捲動功能不再流暢，請啟用此因應措施。此因應措施適用於 Microsoft Surface 等具備精確軌跡板發生的捲動延遲問題 (https://github.com/Microsoft/vscode/issues/13612)。啟用此因應措施可能會在將視窗從最小化狀態還原後，導致版面稍微閃爍，但並不會造成任何傷害。",
	"window.clickThroughInactive": "若已啟用，按一下非使用中的視窗將會啟動該視窗並觸發其下的元素 (如果可以案的話)。若已停用，按一下非使用中視窗的任一處則只會啟動該視窗，必須再按一下才會觸發元素。",
	"zenModeConfigurationTitle": "Zen Mode",
	"zenMode.fullScreen": "控制開啟 Zen Mode 是否也會將 Workbench 轉換為全螢幕模式。",
	"zenMode.centerLayout": "控制開啟 Zen Mode 是否也會置中配置。",
	"zenMode.hideTabs": "控制開啟 Zen Mode 是否也會隱藏 Workbench 索引標籤。",
	"zenMode.hideStatusBar": "控制開啟 Zen Mode 是否也會隱藏 Workbench 底部的狀態列。",
	"zenMode.hideActivityBar": "控制開啟 Zen Mode 是否也會隱藏 Workbench 左方的活動列。",
	"zenMode.restore": "控制視窗如果在 Zen Mode 下結束，是否應還原為 Zen Mode。"
}