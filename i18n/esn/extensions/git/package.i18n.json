{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"displayName": "GIT",
	"description": "Integración Git SCM",
	"command.clone": "Clonar",
	"command.init": "Inicializar el repositorio",
	"command.close": "Cerrar repositorio",
	"command.refresh": "Actualizar",
	"command.openChange": "Abrir cambios",
	"command.openFile": "Abrir archivo",
	"command.openHEADFile": "Abrir archivo (HEAD)",
	"command.stage": "Almacenar cambios provisionalmente",
	"command.stageAll": "Almacenar todos los cambios",
	"command.stageSelectedRanges": "Realizar copia intermedia de los intervalos seleccionados",
	"command.revertSelectedRanges": "Revertir los intervalos seleccionados",
	"command.stageChange": "Cambio de la etapa",
	"command.revertChange": "Revertir el cambio",
	"command.unstage": "Cancelar almacenamiento provisional de los cambios",
	"command.unstageAll": "Cancelar almacenamiento provisional de todos los cambios",
	"command.unstageSelectedRanges": "Cancelar almacenamiento provisional de los intervalos seleccionados",
	"command.clean": "Descartar cambios",
	"command.cleanAll": "Descartar todos los cambios",
	"command.commit": "Confirmar",
	"command.commitStaged": "Confirmar almacenados provisionalmente",
	"command.commitStagedSigned": "Confirmar por etapas (Aprobado)",
	"command.commitStagedAmend": "Confirmar almacenados provisionalmente (modificar)",
	"command.commitAll": "Confirmar todo",
	"command.commitAllSigned": "Confirmar todo (aprobado)",
	"command.commitAllAmend": "Confirmar todo (modificar)",
	"command.undoCommit": "Deshacer última confirmación",
	"command.checkout": "Desproteger en...",
	"command.branch": "Crear rama...",
	"command.deleteBranch": "Borrar rama...",
	"command.renameBranch": "Renombrar Rama...",
	"command.merge": "Fusionar rama...",
	"command.createTag": "Crear etiqueta",
	"command.fetch": "Buscar",
	"command.pull": "Incorporación de cambios",
	"command.pullRebase": "Incorporación de cambios (fusionar mediante cambio de base)",
	"command.pullFrom": "Extraer de...",
	"command.push": "Insertar",
	"command.pushTo": "Insertar en...",
	"command.pushWithTags": "Insertar con etiquetas",
	"command.sync": "Sincronizar",
	"command.syncRebase": "Sincronizar (Rebase)",
	"command.publish": "Publicar rama",
	"command.showOutput": "Mostrar salida de GIT",
	"command.ignore": "Agregar archivo a .gitignore",
	"command.stashIncludeUntracked": "Guardar provisionalmente (Incluir sin seguimiento)",
	"command.stash": "Guardar provisionalmente",
	"command.stashPop": "Aplicar y quitar cambios guardados provisionalmente...",
	"command.stashPopLatest": "Aplicar y quitar últimos cambios guardados provisionalmente...",
	"config.enabled": "Si GIT está habilitado",
	"config.path": "Ruta de acceso del ejecutable de GIT",
	"config.autoRepositoryDetection": "Si se deben detectar automáticamente los repositories ",
	"config.autorefresh": "Indica si la actualización automática está habilitada",
	"config.autofetch": "Si la búsqueda automática está habilitada",
	"config.enableLongCommitWarning": "Si se debe advertir sobre los mensajes de confirmación largos",
	"config.confirmSync": "Confirmar antes de sincronizar repositorios GIT",
	"config.countBadge": "Controla el contador de insignia de Git. \"Todo\" cuenta todos los cambios. \"Seguimiento\" solamente cuenta los cambios realizados. \"Desactivado\" lo desconecta.",
	"config.checkoutType": "Controla el tipo de ramas listadas cuando ejecuta \"Desproteger\". \"Todo\" muetra todas las referencias, \"local\" solamente las ramas locales y \"remoto\" las ramas remotas.",
	"config.ignoreLegacyWarning": "Ignora las advertencias hereradas de Git",
	"config.ignoreMissingGitWarning": "Ignora la advertencia cuando falta Git",
	"config.ignoreLimitWarning": "\nIgnora advertencias cuando se encuentran muchos cambios en un repositorio.",
	"config.defaultCloneDirectory": "La ubicación predeterminada en la que se clona un repositorio git",
	"config.enableSmartCommit": "Confirmar todos los cambios cuando no hay elementos almacenados provisionalmente.",
	"config.enableCommitSigning": "Habilitar confirmar firma con GPG.",
	"config.discardAllScope": "Controla qué cambios son descartados por el comando 'Descartar todos los cambios'. 'all' descarta todos los cambios. 'tracked' descarta sólo los ficheros en seguimiento. 'prompt' muestra un cuadro de diálogo para confirmar cada vez la acción ejecutada.",
	"config.decorations.enabled": "Controla si Git contribuye los colores y distintivos al explorador y a los editores abiertos.",
	"config.promptToSaveFilesBeforeCommit": "Controla si Git debe comprobar los archivos no guardados antes de confirmar las actualizaciones. ",
	"config.showInlineOpenFileAction": "Controla si se debe mostrar una acción de archivo abierto en la vista de cambios en Git",
	"config.inputValidation": "Controla cuándo mostrar el mensaje de validación de entrada en el contador de entrada.",
	"config.detectSubmodules": "Controla si se detectan automáticamente los submódulos Git. ",
	"config.detectSubmodulesLimit": "Controla el límite de submódulos de git detectados.",
	"colors.modified": "Color para recursos modificados.",
	"colors.deleted": "Color para los recursos eliminados.",
	"colors.untracked": "Color para los recursos a los que no se les hace seguimiento.",
	"colors.ignored": "Color para los recursos ignorados.",
	"colors.conflict": "Color para los recursos con conflictos.",
	"colors.submodule": "Color para los recursos de submódulos."
}